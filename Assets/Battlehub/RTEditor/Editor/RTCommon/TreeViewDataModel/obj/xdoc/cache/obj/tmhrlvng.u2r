id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.TerrainSmoothingSample
    commentId: T:Global.TerrainSmoothingSample
    language: CSharp
    name:
      CSharp: TerrainSmoothingSample
      VB: TerrainSmoothingSample
    nameWithType:
      CSharp: TerrainSmoothingSample
      VB: TerrainSmoothingSample
    qualifiedName:
      CSharp: TerrainSmoothingSample
      VB: TerrainSmoothingSample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TerrainSmoothingSample
      path: ''
      startLine: 4
    syntax:
      content:
        CSharp: 'public class TerrainSmoothingSample : MonoBehaviour'
        VB: >-
          Public Class TerrainSmoothingSample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.WallToolSample
    commentId: T:Global.WallToolSample
    language: CSharp
    name:
      CSharp: WallToolSample
      VB: WallToolSample
    nameWithType:
      CSharp: WallToolSample
      VB: WallToolSample
    qualifiedName:
      CSharp: WallToolSample
      VB: WallToolSample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WallToolSample
      path: ''
      startLine: 37
    syntax:
      content:
        CSharp: 'public class WallToolSample : MonoBehaviour'
        VB: >-
          Public Class WallToolSample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.PatchUtility
    commentId: T:Global.PatchUtility
    language: CSharp
    name:
      CSharp: PatchUtility
      VB: PatchUtility
    nameWithType:
      CSharp: PatchUtility
      VB: PatchUtility
    qualifiedName:
      CSharp: PatchUtility
      VB: PatchUtility
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PatchUtility
      path: ''
      startLine: 4850
    syntax:
      content:
        CSharp: 'public class PatchUtility : MonoBehaviour'
        VB: >-
          Public Class PatchUtility

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PatchUtility.PatchPersistentClassMappings
      commentId: M:Global.PatchUtility.PatchPersistentClassMappings
      language: CSharp
      name:
        CSharp: PatchPersistentClassMappings()
        VB: PatchPersistentClassMappings()
      nameWithType:
        CSharp: PatchUtility.PatchPersistentClassMappings()
        VB: PatchUtility.PatchPersistentClassMappings()
      qualifiedName:
        CSharp: PatchUtility.PatchPersistentClassMappings()
        VB: PatchUtility.PatchPersistentClassMappings()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PatchPersistentClassMappings
        path: ''
        startLine: 4855
      summary: "\nThis method should be used make persistent classes to be compatible with saved files after CodeGen.cs fix from 10/23/2019.\n"
      example: []
      syntax:
        content:
          CSharp: public static void PatchPersistentClassMappings()
          VB: Public Shared Sub PatchPersistentClassMappings
      overload: Global.PatchUtility.PatchPersistentClassMappings*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PatchUtility.UpdateMappedAssemblyNames3(System.String)
      commentId: M:Global.PatchUtility.UpdateMappedAssemblyNames3(System.String)
      language: CSharp
      name:
        CSharp: UpdateMappedAssemblyNames3(String)
        VB: UpdateMappedAssemblyNames3(String)
      nameWithType:
        CSharp: PatchUtility.UpdateMappedAssemblyNames3(String)
        VB: PatchUtility.UpdateMappedAssemblyNames3(String)
      qualifiedName:
        CSharp: PatchUtility.UpdateMappedAssemblyNames3(System.String)
        VB: PatchUtility.UpdateMappedAssemblyNames3(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateMappedAssemblyNames3
        path: ''
        startLine: 5152
      syntax:
        content:
          CSharp: public static void UpdateMappedAssemblyNames3(string storagePath)
          VB: Public Shared Sub UpdateMappedAssemblyNames3(storagePath As String)
        parameters:
        - id: storagePath
          type: System.String
      overload: Global.PatchUtility.UpdateMappedAssemblyNames3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.ColorValues
    commentId: T:Global.ColorValues
    language: CSharp
    name:
      CSharp: ColorValues
      VB: ColorValues
    nameWithType:
      CSharp: ColorValues
      VB: ColorValues
    qualifiedName:
      CSharp: ColorValues
      VB: ColorValues
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorValues
      path: ''
      startLine: 159751
    syntax:
      content:
        CSharp: public enum ColorValues
        VB: Public Enum ColorValues
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ColorValues.R
      commentId: F:Global.ColorValues.R
      language: CSharp
      name:
        CSharp: R
        VB: R
      nameWithType:
        CSharp: ColorValues.R
        VB: ColorValues.R
      qualifiedName:
        CSharp: ColorValues.R
        VB: ColorValues.R
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: R
        path: ''
        startLine: 159753
      syntax:
        content:
          CSharp: R = 0
          VB: R = 0
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.G
      commentId: F:Global.ColorValues.G
      language: CSharp
      name:
        CSharp: G
        VB: G
      nameWithType:
        CSharp: ColorValues.G
        VB: ColorValues.G
      qualifiedName:
        CSharp: ColorValues.G
        VB: ColorValues.G
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: G
        path: ''
        startLine: 159754
      syntax:
        content:
          CSharp: G = 1
          VB: G = 1
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.B
      commentId: F:Global.ColorValues.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: ColorValues.B
        VB: ColorValues.B
      qualifiedName:
        CSharp: ColorValues.B
        VB: ColorValues.B
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: B
        path: ''
        startLine: 159755
      syntax:
        content:
          CSharp: B = 2
          VB: B = 2
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.A
      commentId: F:Global.ColorValues.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: ColorValues.A
        VB: ColorValues.A
      qualifiedName:
        CSharp: ColorValues.A
        VB: ColorValues.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: A
        path: ''
        startLine: 159756
      syntax:
        content:
          CSharp: A = 3
          VB: A = 3
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.Hue
      commentId: F:Global.ColorValues.Hue
      language: CSharp
      name:
        CSharp: Hue
        VB: Hue
      nameWithType:
        CSharp: ColorValues.Hue
        VB: ColorValues.Hue
      qualifiedName:
        CSharp: ColorValues.Hue
        VB: ColorValues.Hue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hue
        path: ''
        startLine: 159758
      syntax:
        content:
          CSharp: Hue = 4
          VB: Hue = 4
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.Saturation
      commentId: F:Global.ColorValues.Saturation
      language: CSharp
      name:
        CSharp: Saturation
        VB: Saturation
      nameWithType:
        CSharp: ColorValues.Saturation
        VB: ColorValues.Saturation
      qualifiedName:
        CSharp: ColorValues.Saturation
        VB: ColorValues.Saturation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Saturation
        path: ''
        startLine: 159759
      syntax:
        content:
          CSharp: Saturation = 5
          VB: Saturation = 5
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ColorValues.Value
      commentId: F:Global.ColorValues.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: ColorValues.Value
        VB: ColorValues.Value
      qualifiedName:
        CSharp: ColorValues.Value
        VB: ColorValues.Value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Value
        path: ''
        startLine: 159760
      syntax:
        content:
          CSharp: Value = 6
          VB: Value = 6
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.ColorChangedEvent
    commentId: T:Global.ColorChangedEvent
    language: CSharp
    name:
      CSharp: ColorChangedEvent
      VB: ColorChangedEvent
    nameWithType:
      CSharp: ColorChangedEvent
      VB: ColorChangedEvent
    qualifiedName:
      CSharp: ColorChangedEvent
      VB: ColorChangedEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorChangedEvent
      path: ''
      startLine: 159767
    syntax:
      content:
        CSharp: 'public class ColorChangedEvent : UnityEvent<Color>'
        VB: >-
          Public Class ColorChangedEvent

              Inherits UnityEvent(Of Color)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.HSVChangedEvent
    commentId: T:Global.HSVChangedEvent
    language: CSharp
    name:
      CSharp: HSVChangedEvent
      VB: HSVChangedEvent
    nameWithType:
      CSharp: HSVChangedEvent
      VB: HSVChangedEvent
    qualifiedName:
      CSharp: HSVChangedEvent
      VB: HSVChangedEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HSVChangedEvent
      path: ''
      startLine: 159774
    syntax:
      content:
        CSharp: 'public class HSVChangedEvent : UnityEvent<float, float, float>'
        VB: >-
          Public Class HSVChangedEvent

              Inherits UnityEvent(Of Single, Single, Single)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.TiltWindow
    commentId: T:Global.TiltWindow
    language: CSharp
    name:
      CSharp: TiltWindow
      VB: TiltWindow
    nameWithType:
      CSharp: TiltWindow
      VB: TiltWindow
    qualifiedName:
      CSharp: TiltWindow
      VB: TiltWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TiltWindow
      path: ''
      startLine: 159781
    syntax:
      content:
        CSharp: 'public class TiltWindow : MonoBehaviour'
        VB: >-
          Public Class TiltWindow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TiltWindow.range
      commentId: F:Global.TiltWindow.range
      language: CSharp
      name:
        CSharp: range
        VB: range
      nameWithType:
        CSharp: TiltWindow.range
        VB: TiltWindow.range
      qualifiedName:
        CSharp: TiltWindow.range
        VB: TiltWindow.range
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: range
        path: ''
        startLine: 159783
      syntax:
        content:
          CSharp: public Vector2 range
          VB: Public range As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorImage
    commentId: T:Global.ColorImage
    language: CSharp
    name:
      CSharp: ColorImage
      VB: ColorImage
    nameWithType:
      CSharp: ColorImage
      VB: ColorImage
    qualifiedName:
      CSharp: ColorImage
      VB: ColorImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorImage
      path: ''
      startLine: 159812
    syntax:
      content:
        CSharp: 'public class ColorImage : MonoBehaviour'
        VB: >-
          Public Class ColorImage

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorImage.picker
      commentId: F:Global.ColorImage.picker
      language: CSharp
      name:
        CSharp: picker
        VB: picker
      nameWithType:
        CSharp: ColorImage.picker
        VB: ColorImage.picker
      qualifiedName:
        CSharp: ColorImage.picker
        VB: ColorImage.picker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: picker
        path: ''
        startLine: 159815
      syntax:
        content:
          CSharp: public ColorPicker picker
          VB: Public picker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorLabel
    commentId: T:Global.ColorLabel
    language: CSharp
    name:
      CSharp: ColorLabel
      VB: ColorLabel
    nameWithType:
      CSharp: ColorLabel
      VB: ColorLabel
    qualifiedName:
      CSharp: ColorLabel
      VB: ColorLabel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorLabel
      path: ''
      startLine: 159840
    syntax:
      content:
        CSharp: 'public class ColorLabel : MonoBehaviour'
        VB: >-
          Public Class ColorLabel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorLabel.picker
      commentId: F:Global.ColorLabel.picker
      language: CSharp
      name:
        CSharp: picker
        VB: picker
      nameWithType:
        CSharp: ColorLabel.picker
        VB: ColorLabel.picker
      qualifiedName:
        CSharp: ColorLabel.picker
        VB: ColorLabel.picker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: picker
        path: ''
        startLine: 159843
      syntax:
        content:
          CSharp: public ColorPicker picker
          VB: Public picker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorLabel.type
      commentId: F:Global.ColorLabel.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: ColorLabel.type
        VB: ColorLabel.type
      qualifiedName:
        CSharp: ColorLabel.type
        VB: ColorLabel.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: type
        path: ''
        startLine: 159845
      syntax:
        content:
          CSharp: public ColorValues type
          VB: Public type As ColorValues
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorLabel.prefix
      commentId: F:Global.ColorLabel.prefix
      language: CSharp
      name:
        CSharp: prefix
        VB: prefix
      nameWithType:
        CSharp: ColorLabel.prefix
        VB: ColorLabel.prefix
      qualifiedName:
        CSharp: ColorLabel.prefix
        VB: ColorLabel.prefix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prefix
        path: ''
        startLine: 159847
      syntax:
        content:
          CSharp: public string prefix
          VB: Public prefix As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorLabel.minValue
      commentId: F:Global.ColorLabel.minValue
      language: CSharp
      name:
        CSharp: minValue
        VB: minValue
      nameWithType:
        CSharp: ColorLabel.minValue
        VB: ColorLabel.minValue
      qualifiedName:
        CSharp: ColorLabel.minValue
        VB: ColorLabel.minValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: minValue
        path: ''
        startLine: 159848
      syntax:
        content:
          CSharp: public float minValue
          VB: Public minValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorLabel.maxValue
      commentId: F:Global.ColorLabel.maxValue
      language: CSharp
      name:
        CSharp: maxValue
        VB: maxValue
      nameWithType:
        CSharp: ColorLabel.maxValue
        VB: ColorLabel.maxValue
      qualifiedName:
        CSharp: ColorLabel.maxValue
        VB: ColorLabel.maxValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxValue
        path: ''
        startLine: 159849
      syntax:
        content:
          CSharp: public float maxValue
          VB: Public maxValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorLabel.precision
      commentId: F:Global.ColorLabel.precision
      language: CSharp
      name:
        CSharp: precision
        VB: precision
      nameWithType:
        CSharp: ColorLabel.precision
        VB: ColorLabel.precision
      qualifiedName:
        CSharp: ColorLabel.precision
        VB: ColorLabel.precision
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: precision
        path: ''
        startLine: 159851
      syntax:
        content:
          CSharp: public int precision
          VB: Public precision As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorPicker
    commentId: T:Global.ColorPicker
    language: CSharp
    name:
      CSharp: ColorPicker
      VB: ColorPicker
    nameWithType:
      CSharp: ColorPicker
      VB: ColorPicker
    qualifiedName:
      CSharp: ColorPicker
      VB: ColorPicker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorPicker
      path: ''
      startLine: 159922
    syntax:
      content:
        CSharp: 'public class ColorPicker : MonoBehaviour'
        VB: >-
          Public Class ColorPicker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorPicker.onValueChanged
      commentId: F:Global.ColorPicker.onValueChanged
      language: CSharp
      name:
        CSharp: onValueChanged
        VB: onValueChanged
      nameWithType:
        CSharp: ColorPicker.onValueChanged
        VB: ColorPicker.onValueChanged
      qualifiedName:
        CSharp: ColorPicker.onValueChanged
        VB: ColorPicker.onValueChanged
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onValueChanged
        path: ''
        startLine: 159934
      syntax:
        content:
          CSharp: public ColorChangedEvent onValueChanged
          VB: Public onValueChanged As ColorChangedEvent
        return:
          type: Global.ColorChangedEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPicker.onHSVChanged
      commentId: F:Global.ColorPicker.onHSVChanged
      language: CSharp
      name:
        CSharp: onHSVChanged
        VB: onHSVChanged
      nameWithType:
        CSharp: ColorPicker.onHSVChanged
        VB: ColorPicker.onHSVChanged
      qualifiedName:
        CSharp: ColorPicker.onHSVChanged
        VB: ColorPicker.onHSVChanged
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onHSVChanged
        path: ''
        startLine: 159935
      syntax:
        content:
          CSharp: public HSVChangedEvent onHSVChanged
          VB: Public onHSVChanged As HSVChangedEvent
        return:
          type: Global.HSVChangedEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPicker.CurrentColor
      commentId: P:Global.ColorPicker.CurrentColor
      language: CSharp
      name:
        CSharp: CurrentColor
        VB: CurrentColor
      nameWithType:
        CSharp: ColorPicker.CurrentColor
        VB: ColorPicker.CurrentColor
      qualifiedName:
        CSharp: ColorPicker.CurrentColor
        VB: ColorPicker.CurrentColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CurrentColor
        path: ''
        startLine: 159937
      syntax:
        content:
          CSharp: public Color CurrentColor { get; set; }
          VB: Public Property CurrentColor As Color
        parameters: []
        return:
          type: Global.Color
      overload: Global.ColorPicker.CurrentColor*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.H
      commentId: P:Global.ColorPicker.H
      language: CSharp
      name:
        CSharp: H
        VB: H
      nameWithType:
        CSharp: ColorPicker.H
        VB: ColorPicker.H
      qualifiedName:
        CSharp: ColorPicker.H
        VB: ColorPicker.H
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: H
        path: ''
        startLine: 159965
      syntax:
        content:
          CSharp: public float H { get; set; }
          VB: Public Property H As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.H*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.S
      commentId: P:Global.ColorPicker.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: ColorPicker.S
        VB: ColorPicker.S
      qualifiedName:
        CSharp: ColorPicker.S
        VB: ColorPicker.S
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: S
        path: ''
        startLine: 159984
      syntax:
        content:
          CSharp: public float S { get; set; }
          VB: Public Property S As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.S*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.V
      commentId: P:Global.ColorPicker.V
      language: CSharp
      name:
        CSharp: V
        VB: V
      nameWithType:
        CSharp: ColorPicker.V
        VB: ColorPicker.V
      qualifiedName:
        CSharp: ColorPicker.V
        VB: ColorPicker.V
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: V
        path: ''
        startLine: 160003
      syntax:
        content:
          CSharp: public float V { get; set; }
          VB: Public Property V As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.V*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.R
      commentId: P:Global.ColorPicker.R
      language: CSharp
      name:
        CSharp: R
        VB: R
      nameWithType:
        CSharp: ColorPicker.R
        VB: ColorPicker.R
      qualifiedName:
        CSharp: ColorPicker.R
        VB: ColorPicker.R
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: R
        path: ''
        startLine: 160022
      syntax:
        content:
          CSharp: public float R { get; set; }
          VB: Public Property R As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.R*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.G
      commentId: P:Global.ColorPicker.G
      language: CSharp
      name:
        CSharp: G
        VB: G
      nameWithType:
        CSharp: ColorPicker.G
        VB: ColorPicker.G
      qualifiedName:
        CSharp: ColorPicker.G
        VB: ColorPicker.G
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: G
        path: ''
        startLine: 160041
      syntax:
        content:
          CSharp: public float G { get; set; }
          VB: Public Property G As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.G*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.B
      commentId: P:Global.ColorPicker.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: ColorPicker.B
        VB: ColorPicker.B
      qualifiedName:
        CSharp: ColorPicker.B
        VB: ColorPicker.B
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: B
        path: ''
        startLine: 160060
      syntax:
        content:
          CSharp: public float B { get; set; }
          VB: Public Property B As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.ColorPicker.B*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ColorPicker.AssignColor(ColorValues,System.Single)
      commentId: M:Global.ColorPicker.AssignColor(ColorValues,System.Single)
      language: CSharp
      name:
        CSharp: AssignColor(ColorValues, Single)
        VB: AssignColor(ColorValues, Single)
      nameWithType:
        CSharp: ColorPicker.AssignColor(ColorValues, Single)
        VB: ColorPicker.AssignColor(ColorValues, Single)
      qualifiedName:
        CSharp: ColorPicker.AssignColor(ColorValues, System.Single)
        VB: ColorPicker.AssignColor(ColorValues, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AssignColor
        path: ''
        startLine: 160120
      syntax:
        content:
          CSharp: public void AssignColor(ColorValues type, float value)
          VB: Public Sub AssignColor(type As ColorValues, value As Single)
        parameters:
        - id: type
          type: Global.ColorValues
        - id: value
          type: System.Single
      overload: Global.ColorPicker.AssignColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPicker.GetValue(ColorValues)
      commentId: M:Global.ColorPicker.GetValue(ColorValues)
      language: CSharp
      name:
        CSharp: GetValue(ColorValues)
        VB: GetValue(ColorValues)
      nameWithType:
        CSharp: ColorPicker.GetValue(ColorValues)
        VB: ColorPicker.GetValue(ColorValues)
      qualifiedName:
        CSharp: ColorPicker.GetValue(ColorValues)
        VB: ColorPicker.GetValue(ColorValues)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetValue
        path: ''
        startLine: 160150
      syntax:
        content:
          CSharp: public float GetValue(ColorValues type)
          VB: Public Function GetValue(type As ColorValues) As Single
        parameters:
        - id: type
          type: Global.ColorValues
        return:
          type: System.Single
      overload: Global.ColorPicker.GetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorPresets
    commentId: T:Global.ColorPresets
    language: CSharp
    name:
      CSharp: ColorPresets
      VB: ColorPresets
    nameWithType:
      CSharp: ColorPresets
      VB: ColorPresets
    qualifiedName:
      CSharp: ColorPresets
      VB: ColorPresets
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorPresets
      path: ''
      startLine: 160177
    syntax:
      content:
        CSharp: 'public class ColorPresets : MonoBehaviour'
        VB: >-
          Public Class ColorPresets

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorPresets.picker
      commentId: F:Global.ColorPresets.picker
      language: CSharp
      name:
        CSharp: picker
        VB: picker
      nameWithType:
        CSharp: ColorPresets.picker
        VB: ColorPresets.picker
      qualifiedName:
        CSharp: ColorPresets.picker
        VB: ColorPresets.picker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: picker
        path: ''
        startLine: 160179
      syntax:
        content:
          CSharp: public ColorPicker picker
          VB: Public picker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPresets.presets
      commentId: F:Global.ColorPresets.presets
      language: CSharp
      name:
        CSharp: presets
        VB: presets
      nameWithType:
        CSharp: ColorPresets.presets
        VB: ColorPresets.presets
      qualifiedName:
        CSharp: ColorPresets.presets
        VB: ColorPresets.presets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: presets
        path: ''
        startLine: 160180
      syntax:
        content:
          CSharp: public GameObject[] presets
          VB: Public presets As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPresets.createPresetImage
      commentId: F:Global.ColorPresets.createPresetImage
      language: CSharp
      name:
        CSharp: createPresetImage
        VB: createPresetImage
      nameWithType:
        CSharp: ColorPresets.createPresetImage
        VB: ColorPresets.createPresetImage
      qualifiedName:
        CSharp: ColorPresets.createPresetImage
        VB: ColorPresets.createPresetImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: createPresetImage
        path: ''
        startLine: 160181
      syntax:
        content:
          CSharp: public Image createPresetImage
          VB: Public createPresetImage As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPresets.CreatePresetButton
      commentId: M:Global.ColorPresets.CreatePresetButton
      language: CSharp
      name:
        CSharp: CreatePresetButton()
        VB: CreatePresetButton()
      nameWithType:
        CSharp: ColorPresets.CreatePresetButton()
        VB: ColorPresets.CreatePresetButton()
      qualifiedName:
        CSharp: ColorPresets.CreatePresetButton()
        VB: ColorPresets.CreatePresetButton()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreatePresetButton
        path: ''
        startLine: 160189
      syntax:
        content:
          CSharp: public void CreatePresetButton()
          VB: Public Sub CreatePresetButton
      overload: Global.ColorPresets.CreatePresetButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorPresets.PresetSelect(Image)
      commentId: M:Global.ColorPresets.PresetSelect(Image)
      language: CSharp
      name:
        CSharp: PresetSelect(Image)
        VB: PresetSelect(Image)
      nameWithType:
        CSharp: ColorPresets.PresetSelect(Image)
        VB: ColorPresets.PresetSelect(Image)
      qualifiedName:
        CSharp: ColorPresets.PresetSelect(Image)
        VB: ColorPresets.PresetSelect(Image)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PresetSelect
        path: ''
        startLine: 160202
      syntax:
        content:
          CSharp: public void PresetSelect(Image sender)
          VB: Public Sub PresetSelect(sender As Image)
        parameters:
        - id: sender
          type: Global.Image
      overload: Global.ColorPresets.PresetSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorSlider
    commentId: T:Global.ColorSlider
    language: CSharp
    name:
      CSharp: ColorSlider
      VB: ColorSlider
    nameWithType:
      CSharp: ColorSlider
      VB: ColorSlider
    qualifiedName:
      CSharp: ColorSlider
      VB: ColorSlider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorSlider
      path: ''
      startLine: 160225
    summary: "\nDisplays one of the color values of aColorPicker\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColorSlider : MonoBehaviour'
        VB: >-
          Public Class ColorSlider

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorSlider.hsvpicker
      commentId: F:Global.ColorSlider.hsvpicker
      language: CSharp
      name:
        CSharp: hsvpicker
        VB: hsvpicker
      nameWithType:
        CSharp: ColorSlider.hsvpicker
        VB: ColorSlider.hsvpicker
      qualifiedName:
        CSharp: ColorSlider.hsvpicker
        VB: ColorSlider.hsvpicker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hsvpicker
        path: ''
        startLine: 160228
      syntax:
        content:
          CSharp: public ColorPicker hsvpicker
          VB: Public hsvpicker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSlider.type
      commentId: F:Global.ColorSlider.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: ColorSlider.type
        VB: ColorSlider.type
      qualifiedName:
        CSharp: ColorSlider.type
        VB: ColorSlider.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: type
        path: ''
        startLine: 160233
      summary: "\nWhich value this slider can edit.\n"
      example: []
      syntax:
        content:
          CSharp: public ColorValues type
          VB: Public type As ColorValues
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorSliderImage
    commentId: T:Global.ColorSliderImage
    language: CSharp
    name:
      CSharp: ColorSliderImage
      VB: ColorSliderImage
    nameWithType:
      CSharp: ColorSliderImage
      VB: ColorSliderImage
    qualifiedName:
      CSharp: ColorSliderImage
      VB: ColorSliderImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorSliderImage
      path: ''
      startLine: 160315
    syntax:
      content:
        CSharp: 'public class ColorSliderImage : MonoBehaviour'
        VB: >-
          Public Class ColorSliderImage

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorSliderImage.picker
      commentId: F:Global.ColorSliderImage.picker
      language: CSharp
      name:
        CSharp: picker
        VB: picker
      nameWithType:
        CSharp: ColorSliderImage.picker
        VB: ColorSliderImage.picker
      qualifiedName:
        CSharp: ColorSliderImage.picker
        VB: ColorSliderImage.picker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: picker
        path: ''
        startLine: 160318
      syntax:
        content:
          CSharp: public ColorPicker picker
          VB: Public picker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSliderImage.type
      commentId: F:Global.ColorSliderImage.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: ColorSliderImage.type
        VB: ColorSliderImage.type
      qualifiedName:
        CSharp: ColorSliderImage.type
        VB: ColorSliderImage.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: type
        path: ''
        startLine: 160323
      summary: "\nWhich value this slider can edit.\n"
      example: []
      syntax:
        content:
          CSharp: public ColorValues type
          VB: Public type As ColorValues
        return:
          type: Global.ColorValues
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSliderImage.direction
      commentId: F:Global.ColorSliderImage.direction
      language: CSharp
      name:
        CSharp: direction
        VB: direction
      nameWithType:
        CSharp: ColorSliderImage.direction
        VB: ColorSliderImage.direction
      qualifiedName:
        CSharp: ColorSliderImage.direction
        VB: ColorSliderImage.direction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: direction
        path: ''
        startLine: 160325
      syntax:
        content:
          CSharp: public Slider.Direction direction
          VB: Public direction As Slider.Direction
        return:
          type: Global.Slider.Direction
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.HexColorField
    commentId: T:Global.HexColorField
    language: CSharp
    name:
      CSharp: HexColorField
      VB: HexColorField
    nameWithType:
      CSharp: HexColorField
      VB: HexColorField
    qualifiedName:
      CSharp: HexColorField
      VB: HexColorField
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HexColorField
      path: ''
      startLine: 160521
    syntax:
      content:
        CSharp: 'public class HexColorField : MonoBehaviour'
        VB: >-
          Public Class HexColorField

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HexColorField.hsvpicker
      commentId: F:Global.HexColorField.hsvpicker
      language: CSharp
      name:
        CSharp: hsvpicker
        VB: hsvpicker
      nameWithType:
        CSharp: HexColorField.hsvpicker
        VB: HexColorField.hsvpicker
      qualifiedName:
        CSharp: HexColorField.hsvpicker
        VB: HexColorField.hsvpicker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hsvpicker
        path: ''
        startLine: 160524
      syntax:
        content:
          CSharp: public ColorPicker hsvpicker
          VB: Public hsvpicker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HexColorField.displayAlpha
      commentId: F:Global.HexColorField.displayAlpha
      language: CSharp
      name:
        CSharp: displayAlpha
        VB: displayAlpha
      nameWithType:
        CSharp: HexColorField.displayAlpha
        VB: HexColorField.displayAlpha
      qualifiedName:
        CSharp: HexColorField.displayAlpha
        VB: HexColorField.displayAlpha
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayAlpha
        path: ''
        startLine: 160526
      syntax:
        content:
          CSharp: public bool displayAlpha
          VB: Public displayAlpha As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SVBoxSlider
    commentId: T:Global.SVBoxSlider
    language: CSharp
    name:
      CSharp: SVBoxSlider
      VB: SVBoxSlider
    nameWithType:
      CSharp: SVBoxSlider
      VB: SVBoxSlider
    qualifiedName:
      CSharp: SVBoxSlider
      VB: SVBoxSlider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SVBoxSlider
      path: ''
      startLine: 160572
    syntax:
      content:
        CSharp: 'public class SVBoxSlider : MonoBehaviour'
        VB: >-
          Public Class SVBoxSlider

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SVBoxSlider.picker
      commentId: F:Global.SVBoxSlider.picker
      language: CSharp
      name:
        CSharp: picker
        VB: picker
      nameWithType:
        CSharp: SVBoxSlider.picker
        VB: SVBoxSlider.picker
      qualifiedName:
        CSharp: SVBoxSlider.picker
        VB: SVBoxSlider.picker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: picker
        path: ''
        startLine: 160575
      syntax:
        content:
          CSharp: public ColorPicker picker
          VB: Public picker As ColorPicker
        return:
          type: Global.ColorPicker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SVBoxSlider.rectTransform
      commentId: P:Global.SVBoxSlider.rectTransform
      language: CSharp
      name:
        CSharp: rectTransform
        VB: rectTransform
      nameWithType:
        CSharp: SVBoxSlider.rectTransform
        VB: SVBoxSlider.rectTransform
      qualifiedName:
        CSharp: SVBoxSlider.rectTransform
        VB: SVBoxSlider.rectTransform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rectTransform
        path: ''
        startLine: 160592
      syntax:
        content:
          CSharp: public RectTransform rectTransform { get; }
          VB: Public ReadOnly Property rectTransform As RectTransform
        parameters: []
        return:
          type: Global.RectTransform
      overload: Global.SVBoxSlider.rectTransform*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Global.HSVUtil
    commentId: T:Global.HSVUtil
    language: CSharp
    name:
      CSharp: HSVUtil
      VB: HSVUtil
    nameWithType:
      CSharp: HSVUtil
      VB: HSVUtil
    qualifiedName:
      CSharp: HSVUtil
      VB: HSVUtil
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HSVUtil
      path: ''
      startLine: 161184
    syntax:
      content:
        CSharp: public static class HSVUtil
        VB: Public Module HSVUtil
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.HSVUtil.ConvertRgbToHsv(Color)
      commentId: M:Global.HSVUtil.ConvertRgbToHsv(Color)
      language: CSharp
      name:
        CSharp: ConvertRgbToHsv(Color)
        VB: ConvertRgbToHsv(Color)
      nameWithType:
        CSharp: HSVUtil.ConvertRgbToHsv(Color)
        VB: HSVUtil.ConvertRgbToHsv(Color)
      qualifiedName:
        CSharp: HSVUtil.ConvertRgbToHsv(Color)
        VB: HSVUtil.ConvertRgbToHsv(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConvertRgbToHsv
        path: ''
        startLine: 161187
      syntax:
        content:
          CSharp: public static HsvColor ConvertRgbToHsv(Color color)
          VB: Public Shared Function ConvertRgbToHsv(color As Color) As HsvColor
        parameters:
        - id: color
          type: Global.Color
        return:
          type: Global.HsvColor
      overload: Global.HSVUtil.ConvertRgbToHsv*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.HSVUtil.ConvertRgbToHsv(System.Double,System.Double,System.Double)
      commentId: M:Global.HSVUtil.ConvertRgbToHsv(System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: ConvertRgbToHsv(Double, Double, Double)
        VB: ConvertRgbToHsv(Double, Double, Double)
      nameWithType:
        CSharp: HSVUtil.ConvertRgbToHsv(Double, Double, Double)
        VB: HSVUtil.ConvertRgbToHsv(Double, Double, Double)
      qualifiedName:
        CSharp: HSVUtil.ConvertRgbToHsv(System.Double, System.Double, System.Double)
        VB: HSVUtil.ConvertRgbToHsv(System.Double, System.Double, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConvertRgbToHsv
        path: ''
        startLine: 161193
      syntax:
        content:
          CSharp: public static HsvColor ConvertRgbToHsv(double r, double b, double g)
          VB: Public Shared Function ConvertRgbToHsv(r As Double, b As Double, g As Double) As HsvColor
        parameters:
        - id: r
          type: System.Double
        - id: b
          type: System.Double
        - id: g
          type: System.Double
        return:
          type: Global.HsvColor
      overload: Global.HSVUtil.ConvertRgbToHsv*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.HSVUtil.ConvertHsvToRgb(System.Double,System.Double,System.Double,System.Single)
      commentId: M:Global.HSVUtil.ConvertHsvToRgb(System.Double,System.Double,System.Double,System.Single)
      language: CSharp
      name:
        CSharp: ConvertHsvToRgb(Double, Double, Double, Single)
        VB: ConvertHsvToRgb(Double, Double, Double, Single)
      nameWithType:
        CSharp: HSVUtil.ConvertHsvToRgb(Double, Double, Double, Single)
        VB: HSVUtil.ConvertHsvToRgb(Double, Double, Double, Single)
      qualifiedName:
        CSharp: HSVUtil.ConvertHsvToRgb(System.Double, System.Double, System.Double, System.Single)
        VB: HSVUtil.ConvertHsvToRgb(System.Double, System.Double, System.Double, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConvertHsvToRgb
        path: ''
        startLine: 161233
      syntax:
        content:
          CSharp: public static Color ConvertHsvToRgb(double h, double s, double v, float alpha)
          VB: Public Shared Function ConvertHsvToRgb(h As Double, s As Double, v As Double, alpha As Single) As Color
        parameters:
        - id: h
          type: System.Double
        - id: s
          type: System.Double
        - id: v
          type: System.Double
        - id: alpha
          type: System.Single
        return:
          type: Global.Color
      overload: Global.HSVUtil.ConvertHsvToRgb*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.HsvColor
    commentId: T:Global.HsvColor
    language: CSharp
    name:
      CSharp: HsvColor
      VB: HsvColor
    nameWithType:
      CSharp: HsvColor
      VB: HsvColor
    qualifiedName:
      CSharp: HsvColor
      VB: HsvColor
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HsvColor
      path: ''
      startLine: 161317
    syntax:
      content:
        CSharp: public struct HsvColor
        VB: Public Structure HsvColor
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.HsvColor.H
      commentId: F:Global.HsvColor.H
      language: CSharp
      name:
        CSharp: H
        VB: H
      nameWithType:
        CSharp: HsvColor.H
        VB: HsvColor.H
      qualifiedName:
        CSharp: HsvColor.H
        VB: HsvColor.H
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: H
        path: ''
        startLine: 161322
      summary: "\nThe Hue, ranges between 0 and 360\n"
      example: []
      syntax:
        content:
          CSharp: public double H
          VB: Public H As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HsvColor.S
      commentId: F:Global.HsvColor.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: HsvColor.S
        VB: HsvColor.S
      qualifiedName:
        CSharp: HsvColor.S
        VB: HsvColor.S
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: S
        path: ''
        startLine: 161327
      summary: "\nThe saturation, ranges between 0 and 1\n"
      example: []
      syntax:
        content:
          CSharp: public double S
          VB: Public S As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HsvColor.V
      commentId: F:Global.HsvColor.V
      language: CSharp
      name:
        CSharp: V
        VB: V
      nameWithType:
        CSharp: HsvColor.V
        VB: HsvColor.V
      qualifiedName:
        CSharp: HsvColor.V
        VB: HsvColor.V
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: V
        path: ''
        startLine: 161330
      syntax:
        content:
          CSharp: public double V
          VB: Public V As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HsvColor.normalizedH
      commentId: P:Global.HsvColor.normalizedH
      language: CSharp
      name:
        CSharp: normalizedH
        VB: normalizedH
      nameWithType:
        CSharp: HsvColor.normalizedH
        VB: HsvColor.normalizedH
      qualifiedName:
        CSharp: HsvColor.normalizedH
        VB: HsvColor.normalizedH
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: normalizedH
        path: ''
        startLine: 161332
      syntax:
        content:
          CSharp: public float normalizedH { get; set; }
          VB: Public Property normalizedH As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.HsvColor.normalizedH*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.HsvColor.normalizedS
      commentId: P:Global.HsvColor.normalizedS
      language: CSharp
      name:
        CSharp: normalizedS
        VB: normalizedS
      nameWithType:
        CSharp: HsvColor.normalizedS
        VB: HsvColor.normalizedS
      qualifiedName:
        CSharp: HsvColor.normalizedS
        VB: HsvColor.normalizedS
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: normalizedS
        path: ''
        startLine: 161345
      syntax:
        content:
          CSharp: public float normalizedS { get; set; }
          VB: Public Property normalizedS As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.HsvColor.normalizedS*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.HsvColor.normalizedV
      commentId: P:Global.HsvColor.normalizedV
      language: CSharp
      name:
        CSharp: normalizedV
        VB: normalizedV
      nameWithType:
        CSharp: HsvColor.normalizedV
        VB: HsvColor.normalizedV
      qualifiedName:
        CSharp: HsvColor.normalizedV
        VB: HsvColor.normalizedV
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: normalizedV
        path: ''
        startLine: 161357
      syntax:
        content:
          CSharp: public float normalizedV { get; set; }
          VB: Public Property normalizedV As Single
        parameters: []
        return:
          type: System.Single
      overload: Global.HsvColor.normalizedV*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.HsvColor.#ctor(System.Double,System.Double,System.Double)
      commentId: M:Global.HsvColor.#ctor(System.Double,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: HsvColor(Double, Double, Double)
        VB: HsvColor(Double, Double, Double)
      nameWithType:
        CSharp: HsvColor.HsvColor(Double, Double, Double)
        VB: HsvColor.HsvColor(Double, Double, Double)
      qualifiedName:
        CSharp: HsvColor.HsvColor(System.Double, System.Double, System.Double)
        VB: HsvColor.HsvColor(System.Double, System.Double, System.Double)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 161369
      syntax:
        content:
          CSharp: public HsvColor(double h, double s, double v)
          VB: Public Sub New(h As Double, s As Double, v As Double)
        parameters:
        - id: h
          type: System.Double
        - id: s
          type: System.Double
        - id: v
          type: System.Double
      overload: Global.HsvColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HsvColor.ToString
      commentId: M:Global.HsvColor.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: HsvColor.ToString()
        VB: HsvColor.ToString()
      qualifiedName:
        CSharp: HsvColor.ToString()
        VB: HsvColor.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToString
        path: ''
        startLine: 161376
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Global.HsvColor.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BasicSample
    commentId: T:Global.BasicSample
    language: CSharp
    name:
      CSharp: BasicSample
      VB: BasicSample
    nameWithType:
      CSharp: BasicSample
      VB: BasicSample
    qualifiedName:
      CSharp: BasicSample
      VB: BasicSample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BasicSample
      path: ''
      startLine: 164232
    syntax:
      content:
        CSharp: 'public class BasicSample : MonoBehaviour'
        VB: >-
          Public Class BasicSample

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BasicSample.WriteResult(System.String[])
      commentId: M:Global.BasicSample.WriteResult(System.String[])
      language: CSharp
      name:
        CSharp: WriteResult(String[])
        VB: WriteResult(String())
      nameWithType:
        CSharp: BasicSample.WriteResult(String[])
        VB: BasicSample.WriteResult(String())
      qualifiedName:
        CSharp: BasicSample.WriteResult(System.String[])
        VB: BasicSample.WriteResult(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WriteResult
        path: ''
        startLine: 164332
      syntax:
        content:
          CSharp: public void WriteResult(string[] paths)
          VB: Public Sub WriteResult(paths As String())
        parameters:
        - id: paths
          type: System.String[]
      overload: Global.BasicSample.WriteResult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BasicSample.WriteResult(System.String)
      commentId: M:Global.BasicSample.WriteResult(System.String)
      language: CSharp
      name:
        CSharp: WriteResult(String)
        VB: WriteResult(String)
      nameWithType:
        CSharp: BasicSample.WriteResult(String)
        VB: BasicSample.WriteResult(String)
      qualifiedName:
        CSharp: BasicSample.WriteResult(System.String)
        VB: BasicSample.WriteResult(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WriteResult
        path: ''
        startLine: 164343
      syntax:
        content:
          CSharp: public void WriteResult(string path)
          VB: Public Sub WriteResult(path As String)
        parameters:
        - id: path
          type: System.String
      overload: Global.BasicSample.WriteResult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CanvasSampleOpenFileImage
    commentId: T:Global.CanvasSampleOpenFileImage
    language: CSharp
    name:
      CSharp: CanvasSampleOpenFileImage
      VB: CanvasSampleOpenFileImage
    nameWithType:
      CSharp: CanvasSampleOpenFileImage
      VB: CanvasSampleOpenFileImage
    qualifiedName:
      CSharp: CanvasSampleOpenFileImage
      VB: CanvasSampleOpenFileImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CanvasSampleOpenFileImage
      path: ''
      startLine: 164358
    syntax:
      content:
        CSharp: 'public class CanvasSampleOpenFileImage : MonoBehaviour, IPointerDownHandler'
        VB: >-
          Public Class CanvasSampleOpenFileImage

              Inherits MonoBehaviour

              Implements IPointerDownHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CanvasSampleOpenFileImage.output
      commentId: F:Global.CanvasSampleOpenFileImage.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: CanvasSampleOpenFileImage.output
        VB: CanvasSampleOpenFileImage.output
      qualifiedName:
        CSharp: CanvasSampleOpenFileImage.output
        VB: CanvasSampleOpenFileImage.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: output
        path: ''
        startLine: 164360
      syntax:
        content:
          CSharp: public RawImage output
          VB: Public output As RawImage
        return:
          type: Global.RawImage
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
      commentId: M:Global.CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileImage.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 164381
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.CanvasSampleOpenFileImage.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CanvasSampleOpenFileText
    commentId: T:Global.CanvasSampleOpenFileText
    language: CSharp
    name:
      CSharp: CanvasSampleOpenFileText
      VB: CanvasSampleOpenFileText
    nameWithType:
      CSharp: CanvasSampleOpenFileText
      VB: CanvasSampleOpenFileText
    qualifiedName:
      CSharp: CanvasSampleOpenFileText
      VB: CanvasSampleOpenFileText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CanvasSampleOpenFileText
      path: ''
      startLine: 164421
    syntax:
      content:
        CSharp: 'public class CanvasSampleOpenFileText : MonoBehaviour, IPointerDownHandler'
        VB: >-
          Public Class CanvasSampleOpenFileText

              Inherits MonoBehaviour

              Implements IPointerDownHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CanvasSampleOpenFileText.output
      commentId: F:Global.CanvasSampleOpenFileText.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: CanvasSampleOpenFileText.output
        VB: CanvasSampleOpenFileText.output
      qualifiedName:
        CSharp: CanvasSampleOpenFileText.output
        VB: CanvasSampleOpenFileText.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: output
        path: ''
        startLine: 164423
      syntax:
        content:
          CSharp: public Text output
          VB: Public output As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
      commentId: M:Global.CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileText.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 164444
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.CanvasSampleOpenFileText.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CanvasSampleOpenFileTextMultiple
    commentId: T:Global.CanvasSampleOpenFileTextMultiple
    language: CSharp
    name:
      CSharp: CanvasSampleOpenFileTextMultiple
      VB: CanvasSampleOpenFileTextMultiple
    nameWithType:
      CSharp: CanvasSampleOpenFileTextMultiple
      VB: CanvasSampleOpenFileTextMultiple
    qualifiedName:
      CSharp: CanvasSampleOpenFileTextMultiple
      VB: CanvasSampleOpenFileTextMultiple
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CanvasSampleOpenFileTextMultiple
      path: ''
      startLine: 164485
    syntax:
      content:
        CSharp: 'public class CanvasSampleOpenFileTextMultiple : MonoBehaviour, IPointerDownHandler'
        VB: >-
          Public Class CanvasSampleOpenFileTextMultiple

              Inherits MonoBehaviour

              Implements IPointerDownHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CanvasSampleOpenFileTextMultiple.output
      commentId: F:Global.CanvasSampleOpenFileTextMultiple.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: CanvasSampleOpenFileTextMultiple.output
        VB: CanvasSampleOpenFileTextMultiple.output
      qualifiedName:
        CSharp: CanvasSampleOpenFileTextMultiple.output
        VB: CanvasSampleOpenFileTextMultiple.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: output
        path: ''
        startLine: 164487
      syntax:
        content:
          CSharp: public Text output
          VB: Public output As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
      commentId: M:Global.CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
        VB: CanvasSampleOpenFileTextMultiple.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 164508
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.CanvasSampleOpenFileTextMultiple.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CanvasSampleSaveFileImage
    commentId: T:Global.CanvasSampleSaveFileImage
    language: CSharp
    name:
      CSharp: CanvasSampleSaveFileImage
      VB: CanvasSampleSaveFileImage
    nameWithType:
      CSharp: CanvasSampleSaveFileImage
      VB: CanvasSampleSaveFileImage
    qualifiedName:
      CSharp: CanvasSampleSaveFileImage
      VB: CanvasSampleSaveFileImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CanvasSampleSaveFileImage
      path: ''
      startLine: 164556
    syntax:
      content:
        CSharp: 'public class CanvasSampleSaveFileImage : MonoBehaviour, IPointerDownHandler'
        VB: >-
          Public Class CanvasSampleSaveFileImage

              Inherits MonoBehaviour

              Implements IPointerDownHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CanvasSampleSaveFileImage.output
      commentId: F:Global.CanvasSampleSaveFileImage.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: CanvasSampleSaveFileImage.output
        VB: CanvasSampleSaveFileImage.output
      qualifiedName:
        CSharp: CanvasSampleSaveFileImage.output
        VB: CanvasSampleSaveFileImage.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: output
        path: ''
        startLine: 164558
      syntax:
        content:
          CSharp: public Text output
          VB: Public output As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
      commentId: M:Global.CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
        VB: CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
        VB: CanvasSampleSaveFileImage.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 164597
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.CanvasSampleSaveFileImage.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleSaveFileImage.OnClick
      commentId: M:Global.CanvasSampleSaveFileImage.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: CanvasSampleSaveFileImage.OnClick()
        VB: CanvasSampleSaveFileImage.OnClick()
      qualifiedName:
        CSharp: CanvasSampleSaveFileImage.OnClick()
        VB: CanvasSampleSaveFileImage.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 164605
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: Global.CanvasSampleSaveFileImage.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CanvasSampleSaveFileText
    commentId: T:Global.CanvasSampleSaveFileText
    language: CSharp
    name:
      CSharp: CanvasSampleSaveFileText
      VB: CanvasSampleSaveFileText
    nameWithType:
      CSharp: CanvasSampleSaveFileText
      VB: CanvasSampleSaveFileText
    qualifiedName:
      CSharp: CanvasSampleSaveFileText
      VB: CanvasSampleSaveFileText
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CanvasSampleSaveFileText
      path: ''
      startLine: 164621
    syntax:
      content:
        CSharp: 'public class CanvasSampleSaveFileText : MonoBehaviour, IPointerDownHandler'
        VB: >-
          Public Class CanvasSampleSaveFileText

              Inherits MonoBehaviour

              Implements IPointerDownHandler
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CanvasSampleSaveFileText.output
      commentId: F:Global.CanvasSampleSaveFileText.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: CanvasSampleSaveFileText.output
        VB: CanvasSampleSaveFileText.output
      qualifiedName:
        CSharp: CanvasSampleSaveFileText.output
        VB: CanvasSampleSaveFileText.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: output
        path: ''
        startLine: 164623
      syntax:
        content:
          CSharp: public Text output
          VB: Public output As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
      commentId: M:Global.CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
        VB: CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
        VB: CanvasSampleSaveFileText.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerDown
        path: ''
        startLine: 164649
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.CanvasSampleSaveFileText.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CanvasSampleSaveFileText.OnClick
      commentId: M:Global.CanvasSampleSaveFileText.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: CanvasSampleSaveFileText.OnClick()
        VB: CanvasSampleSaveFileText.OnClick()
      qualifiedName:
        CSharp: CanvasSampleSaveFileText.OnClick()
        VB: CanvasSampleSaveFileText.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 164657
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: Global.CanvasSampleSaveFileText.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MenuItems
    commentId: T:Global.MenuItems
    language: CSharp
    name:
      CSharp: MenuItems
      VB: MenuItems
    nameWithType:
      CSharp: MenuItems
      VB: MenuItems
    qualifiedName:
      CSharp: MenuItems
      VB: MenuItems
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MenuItems
      path: ''
      startLine: 164673
    syntax:
      content:
        CSharp: public class MenuItems
        VB: Public Class MenuItems
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MenuItems.AddRectangle(MenuCommand)
      commentId: M:Global.MenuItems.AddRectangle(MenuCommand)
      language: CSharp
      name:
        CSharp: AddRectangle(MenuCommand)
        VB: AddRectangle(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddRectangle(MenuCommand)
        VB: MenuItems.AddRectangle(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddRectangle(MenuCommand)
        VB: MenuItems.AddRectangle(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddRectangle
        path: ''
        startLine: 164676
      syntax:
        content:
          CSharp: public static void AddRectangle(MenuCommand menuCommand)
          VB: Public Shared Sub AddRectangle(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddRectangle*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddEllipse(MenuCommand)
      commentId: M:Global.MenuItems.AddEllipse(MenuCommand)
      language: CSharp
      name:
        CSharp: AddEllipse(MenuCommand)
        VB: AddEllipse(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddEllipse(MenuCommand)
        VB: MenuItems.AddEllipse(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddEllipse(MenuCommand)
        VB: MenuItems.AddEllipse(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddEllipse
        path: ''
        startLine: 164682
      syntax:
        content:
          CSharp: public static void AddEllipse(MenuCommand menuCommand)
          VB: Public Shared Sub AddEllipse(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddEllipse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddLine(MenuCommand)
      commentId: M:Global.MenuItems.AddLine(MenuCommand)
      language: CSharp
      name:
        CSharp: AddLine(MenuCommand)
        VB: AddLine(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddLine(MenuCommand)
        VB: MenuItems.AddLine(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddLine(MenuCommand)
        VB: MenuItems.AddLine(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddLine
        path: ''
        startLine: 164689
      syntax:
        content:
          CSharp: public static void AddLine(MenuCommand menuCommand)
          VB: Public Shared Sub AddLine(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddLine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddPolygon(MenuCommand)
      commentId: M:Global.MenuItems.AddPolygon(MenuCommand)
      language: CSharp
      name:
        CSharp: AddPolygon(MenuCommand)
        VB: AddPolygon(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddPolygon(MenuCommand)
        VB: MenuItems.AddPolygon(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddPolygon(MenuCommand)
        VB: MenuItems.AddPolygon(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddPolygon
        path: ''
        startLine: 164695
      syntax:
        content:
          CSharp: public static void AddPolygon(MenuCommand menuCommand)
          VB: Public Shared Sub AddPolygon(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddPolygon*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddArc(MenuCommand)
      commentId: M:Global.MenuItems.AddArc(MenuCommand)
      language: CSharp
      name:
        CSharp: AddArc(MenuCommand)
        VB: AddArc(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddArc(MenuCommand)
        VB: MenuItems.AddArc(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddArc(MenuCommand)
        VB: MenuItems.AddArc(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddArc
        path: ''
        startLine: 164702
      syntax:
        content:
          CSharp: public static void AddArc(MenuCommand menuCommand)
          VB: Public Shared Sub AddArc(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddArc*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddSector(MenuCommand)
      commentId: M:Global.MenuItems.AddSector(MenuCommand)
      language: CSharp
      name:
        CSharp: AddSector(MenuCommand)
        VB: AddSector(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddSector(MenuCommand)
        VB: MenuItems.AddSector(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddSector(MenuCommand)
        VB: MenuItems.AddSector(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddSector
        path: ''
        startLine: 164708
      syntax:
        content:
          CSharp: public static void AddSector(MenuCommand menuCommand)
          VB: Public Shared Sub AddSector(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddSector*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddEdgeGradient(MenuCommand)
      commentId: M:Global.MenuItems.AddEdgeGradient(MenuCommand)
      language: CSharp
      name:
        CSharp: AddEdgeGradient(MenuCommand)
        VB: AddEdgeGradient(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddEdgeGradient(MenuCommand)
        VB: MenuItems.AddEdgeGradient(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddEdgeGradient(MenuCommand)
        VB: MenuItems.AddEdgeGradient(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddEdgeGradient
        path: ''
        startLine: 164715
      syntax:
        content:
          CSharp: public static void AddEdgeGradient(MenuCommand menuCommand)
          VB: Public Shared Sub AddEdgeGradient(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddEdgeGradient*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddPixelLine(MenuCommand)
      commentId: M:Global.MenuItems.AddPixelLine(MenuCommand)
      language: CSharp
      name:
        CSharp: AddPixelLine(MenuCommand)
        VB: AddPixelLine(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddPixelLine(MenuCommand)
        VB: MenuItems.AddPixelLine(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddPixelLine(MenuCommand)
        VB: MenuItems.AddPixelLine(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddPixelLine
        path: ''
        startLine: 164721
      syntax:
        content:
          CSharp: public static void AddPixelLine(MenuCommand menuCommand)
          VB: Public Shared Sub AddPixelLine(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddPixelLine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.AddEmptyFillRect(MenuCommand)
      commentId: M:Global.MenuItems.AddEmptyFillRect(MenuCommand)
      language: CSharp
      name:
        CSharp: AddEmptyFillRect(MenuCommand)
        VB: AddEmptyFillRect(MenuCommand)
      nameWithType:
        CSharp: MenuItems.AddEmptyFillRect(MenuCommand)
        VB: MenuItems.AddEmptyFillRect(MenuCommand)
      qualifiedName:
        CSharp: MenuItems.AddEmptyFillRect(MenuCommand)
        VB: MenuItems.AddEmptyFillRect(MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddEmptyFillRect
        path: ''
        startLine: 164728
      syntax:
        content:
          CSharp: public static void AddEmptyFillRect(MenuCommand menuCommand)
          VB: Public Shared Sub AddEmptyFillRect(menuCommand As MenuCommand)
        parameters:
        - id: menuCommand
          type: Global.MenuCommand
      overload: Global.MenuItems.AddEmptyFillRect*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.CreateShapeGO(System.String,MenuCommand)
      commentId: M:Global.MenuItems.CreateShapeGO(System.String,MenuCommand)
      language: CSharp
      name:
        CSharp: CreateShapeGO(String, MenuCommand)
        VB: CreateShapeGO(String, MenuCommand)
      nameWithType:
        CSharp: MenuItems.CreateShapeGO(String, MenuCommand)
        VB: MenuItems.CreateShapeGO(String, MenuCommand)
      qualifiedName:
        CSharp: MenuItems.CreateShapeGO(System.String, MenuCommand)
        VB: MenuItems.CreateShapeGO(System.String, MenuCommand)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateShapeGO
        path: ''
        startLine: 164735
      syntax:
        content:
          CSharp: public static GameObject CreateShapeGO(string name, MenuCommand menuCommand)
          VB: Public Shared Function CreateShapeGO(name As String, menuCommand As MenuCommand) As GameObject
        parameters:
        - id: name
          type: System.String
        - id: menuCommand
          type: Global.MenuCommand
        return:
          type: Global.GameObject
      overload: Global.MenuItems.CreateShapeGO*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.MenuItems.CreateCanvas
      commentId: M:Global.MenuItems.CreateCanvas
      language: CSharp
      name:
        CSharp: CreateCanvas()
        VB: CreateCanvas()
      nameWithType:
        CSharp: MenuItems.CreateCanvas()
        VB: MenuItems.CreateCanvas()
      qualifiedName:
        CSharp: MenuItems.CreateCanvas()
        VB: MenuItems.CreateCanvas()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateCanvas
        path: ''
        startLine: 164762
      syntax:
        content:
          CSharp: public static GameObject CreateCanvas()
          VB: Public Shared Function CreateCanvas As GameObject
        return:
          type: Global.GameObject
      overload: Global.MenuItems.CreateCanvas*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.FunctionDemoEditor
    commentId: T:Global.FunctionDemoEditor
    language: CSharp
    name:
      CSharp: FunctionDemoEditor
      VB: FunctionDemoEditor
    nameWithType:
      CSharp: FunctionDemoEditor
      VB: FunctionDemoEditor
    qualifiedName:
      CSharp: FunctionDemoEditor
      VB: FunctionDemoEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FunctionDemoEditor
      path: ''
      startLine: 164812
    syntax:
      content:
        CSharp: 'public class FunctionDemoEditor : Editor'
        VB: >-
          Public Class FunctionDemoEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FunctionDemoEditor.OnInspectorGUI
      commentId: M:Global.FunctionDemoEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: FunctionDemoEditor.OnInspectorGUI()
        VB: FunctionDemoEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: FunctionDemoEditor.OnInspectorGUI()
        VB: FunctionDemoEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 164845
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.FunctionDemoEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.FunctionDemoEditor2
    commentId: T:Global.FunctionDemoEditor2
    language: CSharp
    name:
      CSharp: FunctionDemoEditor2
      VB: FunctionDemoEditor2
    nameWithType:
      CSharp: FunctionDemoEditor2
      VB: FunctionDemoEditor2
    qualifiedName:
      CSharp: FunctionDemoEditor2
      VB: FunctionDemoEditor2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FunctionDemoEditor2
      path: ''
      startLine: 165061
    syntax:
      content:
        CSharp: 'public class FunctionDemoEditor2 : Editor'
        VB: >-
          Public Class FunctionDemoEditor2

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FunctionDemoEditor2.OnInspectorGUI
      commentId: M:Global.FunctionDemoEditor2.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: FunctionDemoEditor2.OnInspectorGUI()
        VB: FunctionDemoEditor2.OnInspectorGUI()
      qualifiedName:
        CSharp: FunctionDemoEditor2.OnInspectorGUI()
        VB: FunctionDemoEditor2.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 165094
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.FunctionDemoEditor2.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.EllipsePropertiesDrawer
    commentId: T:Global.EllipsePropertiesDrawer
    language: CSharp
    name:
      CSharp: EllipsePropertiesDrawer
      VB: EllipsePropertiesDrawer
    nameWithType:
      CSharp: EllipsePropertiesDrawer
      VB: EllipsePropertiesDrawer
    qualifiedName:
      CSharp: EllipsePropertiesDrawer
      VB: EllipsePropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EllipsePropertiesDrawer
      path: ''
      startLine: 165308
    syntax:
      content:
        CSharp: 'public class EllipsePropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class EllipsePropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EllipsePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.EllipsePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: EllipsePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: EllipsePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: EllipsePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: EllipsePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 165312
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.EllipsePropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: EllipsePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 165358
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.EllipsePropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.LinePropertiesDrawer
    commentId: T:Global.LinePropertiesDrawer
    language: CSharp
    name:
      CSharp: LinePropertiesDrawer
      VB: LinePropertiesDrawer
    nameWithType:
      CSharp: LinePropertiesDrawer
      VB: LinePropertiesDrawer
    qualifiedName:
      CSharp: LinePropertiesDrawer
      VB: LinePropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LinePropertiesDrawer
      path: ''
      startLine: 165374
    syntax:
      content:
        CSharp: 'public class LinePropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class LinePropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LinePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.LinePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: LinePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: LinePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: LinePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: LinePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 165377
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.LinePropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.LinePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.LinePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: LinePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: LinePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: LinePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: LinePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 165419
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.LinePropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.OutlineShapePropertiesDrawer
    commentId: T:Global.OutlineShapePropertiesDrawer
    language: CSharp
    name:
      CSharp: OutlineShapePropertiesDrawer
      VB: OutlineShapePropertiesDrawer
    nameWithType:
      CSharp: OutlineShapePropertiesDrawer
      VB: OutlineShapePropertiesDrawer
    qualifiedName:
      CSharp: OutlineShapePropertiesDrawer
      VB: OutlineShapePropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OutlineShapePropertiesDrawer
      path: ''
      startLine: 165448
    syntax:
      content:
        CSharp: 'public class OutlineShapePropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class OutlineShapePropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.OutlineShapePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.OutlineShapePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: OutlineShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OutlineShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: OutlineShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OutlineShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 165451
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.OutlineShapePropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: OutlineShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 165497
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.OutlineShapePropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.PointListDrawer
    commentId: T:Global.PointListDrawer
    language: CSharp
    name:
      CSharp: PointListDrawer
      VB: PointListDrawer
    nameWithType:
      CSharp: PointListDrawer
      VB: PointListDrawer
    qualifiedName:
      CSharp: PointListDrawer
      VB: PointListDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PointListDrawer
      path: ''
      startLine: 165526
    syntax:
      content:
        CSharp: public class PointListDrawer
        VB: Public Class PointListDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PointListDrawer.Draw(Vector2[]@,RectTransform,System.Boolean,System.Int32)
      commentId: M:Global.PointListDrawer.Draw(Vector2[]@,RectTransform,System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: Draw(ref Vector2[], RectTransform, Boolean, Int32)
        VB: Draw(ByRef Vector2(), RectTransform, Boolean, Int32)
      nameWithType:
        CSharp: PointListDrawer.Draw(ref Vector2[], RectTransform, Boolean, Int32)
        VB: PointListDrawer.Draw(ByRef Vector2(), RectTransform, Boolean, Int32)
      qualifiedName:
        CSharp: PointListDrawer.Draw(ref Vector2[], RectTransform, System.Boolean, System.Int32)
        VB: PointListDrawer.Draw(ByRef Vector2(), RectTransform, System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Draw
        path: ''
        startLine: 165537
      syntax:
        content:
          CSharp: public static bool Draw(ref Vector2[] positions, RectTransform rectTransform, bool isClosed, int minPoints)
          VB: Public Shared Function Draw(ByRef positions As Vector2(), rectTransform As RectTransform, isClosed As Boolean, minPoints As Integer) As Boolean
        parameters:
        - id: positions
          type: Global.Vector2[]
        - id: rectTransform
          type: Global.RectTransform
        - id: isClosed
          type: System.Boolean
        - id: minPoints
          type: System.Int32
        return:
          type: System.Boolean
      overload: Global.PointListDrawer.Draw*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.PointListPropertiesDrawer
    commentId: T:Global.PointListPropertiesDrawer
    language: CSharp
    name:
      CSharp: PointListPropertiesDrawer
      VB: PointListPropertiesDrawer
    nameWithType:
      CSharp: PointListPropertiesDrawer
      VB: PointListPropertiesDrawer
    qualifiedName:
      CSharp: PointListPropertiesDrawer
      VB: PointListPropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PointListPropertiesDrawer
      path: ''
      startLine: 165759
    syntax:
      content:
        CSharp: 'public class PointListPropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class PointListPropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PointListPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.PointListPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: PointListPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: PointListPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: PointListPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: PointListPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 165764
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.PointListPropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: PointListPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166232
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.PointListPropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.PolygonPropertiesDrawer
    commentId: T:Global.PolygonPropertiesDrawer
    language: CSharp
    name:
      CSharp: PolygonPropertiesDrawer
      VB: PolygonPropertiesDrawer
    nameWithType:
      CSharp: PolygonPropertiesDrawer
      VB: PolygonPropertiesDrawer
    qualifiedName:
      CSharp: PolygonPropertiesDrawer
      VB: PolygonPropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PolygonPropertiesDrawer
      path: ''
      startLine: 166368
    syntax:
      content:
        CSharp: 'public class PolygonPropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class PolygonPropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PolygonPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.PolygonPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: PolygonPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: PolygonPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: PolygonPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: PolygonPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 166371
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.PolygonPropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: PolygonPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166419
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.PolygonPropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.RoundedPropertiesDrawer
    commentId: T:Global.RoundedPropertiesDrawer
    language: CSharp
    name:
      CSharp: RoundedPropertiesDrawer
      VB: RoundedPropertiesDrawer
    nameWithType:
      CSharp: RoundedPropertiesDrawer
      VB: RoundedPropertiesDrawer
    qualifiedName:
      CSharp: RoundedPropertiesDrawer
      VB: RoundedPropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RoundedPropertiesDrawer
      path: ''
      startLine: 166465
    syntax:
      content:
        CSharp: 'public class RoundedPropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class RoundedPropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RoundedPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.RoundedPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: RoundedPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: RoundedPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: RoundedPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: RoundedPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 166471
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.RoundedPropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: RoundedPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166595
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.RoundedPropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.RoundingPropertiesDrawer
    commentId: T:Global.RoundingPropertiesDrawer
    language: CSharp
    name:
      CSharp: RoundingPropertiesDrawer
      VB: RoundingPropertiesDrawer
    nameWithType:
      CSharp: RoundingPropertiesDrawer
      VB: RoundingPropertiesDrawer
    qualifiedName:
      CSharp: RoundingPropertiesDrawer
      VB: RoundingPropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RoundingPropertiesDrawer
      path: ''
      startLine: 166687
    syntax:
      content:
        CSharp: 'public class RoundingPropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class RoundingPropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RoundingPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.RoundingPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: RoundingPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: RoundingPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: RoundingPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: RoundingPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 166690
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.RoundingPropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: RoundingPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166734
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.RoundingPropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.ShadowsPropertiesDrawer
    commentId: T:Global.ShadowsPropertiesDrawer
    language: CSharp
    name:
      CSharp: ShadowsPropertiesDrawer
      VB: ShadowsPropertiesDrawer
    nameWithType:
      CSharp: ShadowsPropertiesDrawer
      VB: ShadowsPropertiesDrawer
    qualifiedName:
      CSharp: ShadowsPropertiesDrawer
      VB: ShadowsPropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShadowsPropertiesDrawer
      path: ''
      startLine: 166746
    syntax:
      content:
        CSharp: 'public class ShadowsPropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class ShadowsPropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShadowsPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.ShadowsPropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: ShadowsPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ShadowsPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ShadowsPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ShadowsPropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 166750
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.ShadowsPropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: ShadowsPropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166852
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.ShadowsPropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.ShapePropertiesDrawer
    commentId: T:Global.ShapePropertiesDrawer
    language: CSharp
    name:
      CSharp: ShapePropertiesDrawer
      VB: ShapePropertiesDrawer
    nameWithType:
      CSharp: ShapePropertiesDrawer
      VB: ShapePropertiesDrawer
    qualifiedName:
      CSharp: ShapePropertiesDrawer
      VB: ShapePropertiesDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShapePropertiesDrawer
      path: ''
      startLine: 166942
    syntax:
      content:
        CSharp: 'public class ShapePropertiesDrawer : PropertyDrawer'
        VB: >-
          Public Class ShapePropertiesDrawer

              Inherits PropertyDrawer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShapePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      commentId: M:Global.ShapePropertiesDrawer.OnGUI(Rect,SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: OnGUI(Rect, SerializedProperty, GUIContent)
        VB: OnGUI(Rect, SerializedProperty, GUIContent)
      nameWithType:
        CSharp: ShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
        VB: ShapePropertiesDrawer.OnGUI(Rect, SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGUI
        path: ''
        startLine: 166945
      syntax:
        content:
          CSharp: public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)
          VB: Public Overrides Sub OnGUI(position As Rect, property As SerializedProperty, label As GUIContent)
        parameters:
        - id: position
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
      overload: Global.ShapePropertiesDrawer.OnGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      commentId: M:Global.ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty,GUIContent)
      language: CSharp
      name:
        CSharp: GetPropertyHeight(SerializedProperty, GUIContent)
        VB: GetPropertyHeight(SerializedProperty, GUIContent)
      nameWithType:
        CSharp: ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      qualifiedName:
        CSharp: ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
        VB: ShapePropertiesDrawer.GetPropertyHeight(SerializedProperty, GUIContent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPropertyHeight
        path: ''
        startLine: 166971
      syntax:
        content:
          CSharp: public override float GetPropertyHeight(SerializedProperty property, GUIContent label)
          VB: Public Overrides Function GetPropertyHeight(property As SerializedProperty, label As GUIContent) As Single
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: label
          type: Global.GUIContent
        return:
          type: System.Single
      overload: Global.ShapePropertiesDrawer.GetPropertyHeight*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.ArcEditor
    commentId: T:Global.ArcEditor
    language: CSharp
    name:
      CSharp: ArcEditor
      VB: ArcEditor
    nameWithType:
      CSharp: ArcEditor
      VB: ArcEditor
    qualifiedName:
      CSharp: ArcEditor
      VB: ArcEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ArcEditor
      path: ''
      startLine: 166990
    syntax:
      content:
        CSharp: 'public class ArcEditor : GraphicEditor'
        VB: >-
          Public Class ArcEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ArcEditor.materialProp
      commentId: F:Global.ArcEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: ArcEditor.materialProp
        VB: ArcEditor.materialProp
      qualifiedName:
        CSharp: ArcEditor.materialProp
        VB: ArcEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 166994
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.raycastTargetProp
      commentId: F:Global.ArcEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: ArcEditor.raycastTargetProp
        VB: ArcEditor.raycastTargetProp
      qualifiedName:
        CSharp: ArcEditor.raycastTargetProp
        VB: ArcEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 166995
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.shapePropertiesProp
      commentId: F:Global.ArcEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: ArcEditor.shapePropertiesProp
        VB: ArcEditor.shapePropertiesProp
      qualifiedName:
        CSharp: ArcEditor.shapePropertiesProp
        VB: ArcEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 166997
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.ellipsePropertiesProp
      commentId: F:Global.ArcEditor.ellipsePropertiesProp
      language: CSharp
      name:
        CSharp: ellipsePropertiesProp
        VB: ellipsePropertiesProp
      nameWithType:
        CSharp: ArcEditor.ellipsePropertiesProp
        VB: ArcEditor.ellipsePropertiesProp
      qualifiedName:
        CSharp: ArcEditor.ellipsePropertiesProp
        VB: ArcEditor.ellipsePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ellipsePropertiesProp
        path: ''
        startLine: 166998
      syntax:
        content:
          CSharp: protected SerializedProperty ellipsePropertiesProp
          VB: Protected ellipsePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.arcPropertiesProp
      commentId: F:Global.ArcEditor.arcPropertiesProp
      language: CSharp
      name:
        CSharp: arcPropertiesProp
        VB: arcPropertiesProp
      nameWithType:
        CSharp: ArcEditor.arcPropertiesProp
        VB: ArcEditor.arcPropertiesProp
      qualifiedName:
        CSharp: ArcEditor.arcPropertiesProp
        VB: ArcEditor.arcPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: arcPropertiesProp
        path: ''
        startLine: 166999
      syntax:
        content:
          CSharp: protected SerializedProperty arcPropertiesProp
          VB: Protected arcPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.lineCapProp
      commentId: F:Global.ArcEditor.lineCapProp
      language: CSharp
      name:
        CSharp: lineCapProp
        VB: lineCapProp
      nameWithType:
        CSharp: ArcEditor.lineCapProp
        VB: ArcEditor.lineCapProp
      qualifiedName:
        CSharp: ArcEditor.lineCapProp
        VB: ArcEditor.lineCapProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: lineCapProp
        path: ''
        startLine: 167000
      syntax:
        content:
          CSharp: protected SerializedProperty lineCapProp
          VB: Protected lineCapProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.CapRoundingPropertiesProp
      commentId: F:Global.ArcEditor.CapRoundingPropertiesProp
      language: CSharp
      name:
        CSharp: CapRoundingPropertiesProp
        VB: CapRoundingPropertiesProp
      nameWithType:
        CSharp: ArcEditor.CapRoundingPropertiesProp
        VB: ArcEditor.CapRoundingPropertiesProp
      qualifiedName:
        CSharp: ArcEditor.CapRoundingPropertiesProp
        VB: ArcEditor.CapRoundingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CapRoundingPropertiesProp
        path: ''
        startLine: 167001
      syntax:
        content:
          CSharp: protected SerializedProperty CapRoundingPropertiesProp
          VB: Protected CapRoundingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.outlinePropertiesProp
      commentId: F:Global.ArcEditor.outlinePropertiesProp
      language: CSharp
      name:
        CSharp: outlinePropertiesProp
        VB: outlinePropertiesProp
      nameWithType:
        CSharp: ArcEditor.outlinePropertiesProp
        VB: ArcEditor.outlinePropertiesProp
      qualifiedName:
        CSharp: ArcEditor.outlinePropertiesProp
        VB: ArcEditor.outlinePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: outlinePropertiesProp
        path: ''
        startLine: 167002
      syntax:
        content:
          CSharp: protected SerializedProperty outlinePropertiesProp
          VB: Protected outlinePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.shadowPropertiesProp
      commentId: F:Global.ArcEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: ArcEditor.shadowPropertiesProp
        VB: ArcEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: ArcEditor.shadowPropertiesProp
        VB: ArcEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167003
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.antiAliasingPropertiesProp
      commentId: F:Global.ArcEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: ArcEditor.antiAliasingPropertiesProp
        VB: ArcEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: ArcEditor.antiAliasingPropertiesProp
        VB: ArcEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167004
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.ArcEditor.OnEnable
      commentId: M:Global.ArcEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: ArcEditor.OnEnable()
        VB: ArcEditor.OnEnable()
      qualifiedName:
        CSharp: ArcEditor.OnEnable()
        VB: ArcEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167008
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.ArcEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.ArcEditor.OnDisable
      commentId: M:Global.ArcEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: ArcEditor.OnDisable()
        VB: ArcEditor.OnDisable()
      qualifiedName:
        CSharp: ArcEditor.OnDisable()
        VB: ArcEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167024
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.ArcEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.ArcEditor.OnInspectorGUI
      commentId: M:Global.ArcEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: ArcEditor.OnInspectorGUI()
        VB: ArcEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: ArcEditor.OnInspectorGUI()
        VB: ArcEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167029
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.ArcEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.EdgeGradientEditor
    commentId: T:Global.EdgeGradientEditor
    language: CSharp
    name:
      CSharp: EdgeGradientEditor
      VB: EdgeGradientEditor
    nameWithType:
      CSharp: EdgeGradientEditor
      VB: EdgeGradientEditor
    qualifiedName:
      CSharp: EdgeGradientEditor
      VB: EdgeGradientEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EdgeGradientEditor
      path: ''
      startLine: 167067
    syntax:
      content:
        CSharp: 'public class EdgeGradientEditor : GraphicEditor'
        VB: >-
          Public Class EdgeGradientEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EdgeGradientEditor.materialProp
      commentId: F:Global.EdgeGradientEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: EdgeGradientEditor.materialProp
        VB: EdgeGradientEditor.materialProp
      qualifiedName:
        CSharp: EdgeGradientEditor.materialProp
        VB: EdgeGradientEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167071
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EdgeGradientEditor.raycastTargetProp
      commentId: F:Global.EdgeGradientEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: EdgeGradientEditor.raycastTargetProp
        VB: EdgeGradientEditor.raycastTargetProp
      qualifiedName:
        CSharp: EdgeGradientEditor.raycastTargetProp
        VB: EdgeGradientEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167072
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EdgeGradientEditor.propertiesProp
      commentId: F:Global.EdgeGradientEditor.propertiesProp
      language: CSharp
      name:
        CSharp: propertiesProp
        VB: propertiesProp
      nameWithType:
        CSharp: EdgeGradientEditor.propertiesProp
        VB: EdgeGradientEditor.propertiesProp
      qualifiedName:
        CSharp: EdgeGradientEditor.propertiesProp
        VB: EdgeGradientEditor.propertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: propertiesProp
        path: ''
        startLine: 167074
      syntax:
        content:
          CSharp: protected SerializedProperty propertiesProp
          VB: Protected propertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EdgeGradientEditor.OnEnable
      commentId: M:Global.EdgeGradientEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: EdgeGradientEditor.OnEnable()
        VB: EdgeGradientEditor.OnEnable()
      qualifiedName:
        CSharp: EdgeGradientEditor.OnEnable()
        VB: EdgeGradientEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167076
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.EdgeGradientEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.EdgeGradientEditor.OnDisable
      commentId: M:Global.EdgeGradientEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: EdgeGradientEditor.OnDisable()
        VB: EdgeGradientEditor.OnDisable()
      qualifiedName:
        CSharp: EdgeGradientEditor.OnDisable()
        VB: EdgeGradientEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167084
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.EdgeGradientEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.EdgeGradientEditor.OnInspectorGUI
      commentId: M:Global.EdgeGradientEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: EdgeGradientEditor.OnInspectorGUI()
        VB: EdgeGradientEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: EdgeGradientEditor.OnInspectorGUI()
        VB: EdgeGradientEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167089
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.EdgeGradientEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.EllipseEditor
    commentId: T:Global.EllipseEditor
    language: CSharp
    name:
      CSharp: EllipseEditor
      VB: EllipseEditor
    nameWithType:
      CSharp: EllipseEditor
      VB: EllipseEditor
    qualifiedName:
      CSharp: EllipseEditor
      VB: EllipseEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EllipseEditor
      path: ''
      startLine: 167109
    syntax:
      content:
        CSharp: 'public class EllipseEditor : GraphicEditor'
        VB: >-
          Public Class EllipseEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EllipseEditor.materialProp
      commentId: F:Global.EllipseEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: EllipseEditor.materialProp
        VB: EllipseEditor.materialProp
      qualifiedName:
        CSharp: EllipseEditor.materialProp
        VB: EllipseEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167115
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.spriteProp
      commentId: F:Global.EllipseEditor.spriteProp
      language: CSharp
      name:
        CSharp: spriteProp
        VB: spriteProp
      nameWithType:
        CSharp: EllipseEditor.spriteProp
        VB: EllipseEditor.spriteProp
      qualifiedName:
        CSharp: EllipseEditor.spriteProp
        VB: EllipseEditor.spriteProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spriteProp
        path: ''
        startLine: 167116
      syntax:
        content:
          CSharp: protected SerializedProperty spriteProp
          VB: Protected spriteProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.raycastTargetProp
      commentId: F:Global.EllipseEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: EllipseEditor.raycastTargetProp
        VB: EllipseEditor.raycastTargetProp
      qualifiedName:
        CSharp: EllipseEditor.raycastTargetProp
        VB: EllipseEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167117
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.shapePropertiesProp
      commentId: F:Global.EllipseEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: EllipseEditor.shapePropertiesProp
        VB: EllipseEditor.shapePropertiesProp
      qualifiedName:
        CSharp: EllipseEditor.shapePropertiesProp
        VB: EllipseEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 167119
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.ellipsePropertiesProp
      commentId: F:Global.EllipseEditor.ellipsePropertiesProp
      language: CSharp
      name:
        CSharp: ellipsePropertiesProp
        VB: ellipsePropertiesProp
      nameWithType:
        CSharp: EllipseEditor.ellipsePropertiesProp
        VB: EllipseEditor.ellipsePropertiesProp
      qualifiedName:
        CSharp: EllipseEditor.ellipsePropertiesProp
        VB: EllipseEditor.ellipsePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ellipsePropertiesProp
        path: ''
        startLine: 167120
      syntax:
        content:
          CSharp: protected SerializedProperty ellipsePropertiesProp
          VB: Protected ellipsePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.outlinePropertiesProp
      commentId: F:Global.EllipseEditor.outlinePropertiesProp
      language: CSharp
      name:
        CSharp: outlinePropertiesProp
        VB: outlinePropertiesProp
      nameWithType:
        CSharp: EllipseEditor.outlinePropertiesProp
        VB: EllipseEditor.outlinePropertiesProp
      qualifiedName:
        CSharp: EllipseEditor.outlinePropertiesProp
        VB: EllipseEditor.outlinePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: outlinePropertiesProp
        path: ''
        startLine: 167121
      syntax:
        content:
          CSharp: protected SerializedProperty outlinePropertiesProp
          VB: Protected outlinePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.shadowPropertiesProp
      commentId: F:Global.EllipseEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: EllipseEditor.shadowPropertiesProp
        VB: EllipseEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: EllipseEditor.shadowPropertiesProp
        VB: EllipseEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167122
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.antiAliasingPropertiesProp
      commentId: F:Global.EllipseEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: EllipseEditor.antiAliasingPropertiesProp
        VB: EllipseEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: EllipseEditor.antiAliasingPropertiesProp
        VB: EllipseEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167123
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.EllipseEditor.OnEnable
      commentId: M:Global.EllipseEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: EllipseEditor.OnEnable()
        VB: EllipseEditor.OnEnable()
      qualifiedName:
        CSharp: EllipseEditor.OnEnable()
        VB: EllipseEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167125
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.EllipseEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.EllipseEditor.OnDisable
      commentId: M:Global.EllipseEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: EllipseEditor.OnDisable()
        VB: EllipseEditor.OnDisable()
      qualifiedName:
        CSharp: EllipseEditor.OnDisable()
        VB: EllipseEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167140
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.EllipseEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.EllipseEditor.OnInspectorGUI
      commentId: M:Global.EllipseEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: EllipseEditor.OnInspectorGUI()
        VB: EllipseEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: EllipseEditor.OnInspectorGUI()
        VB: EllipseEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167145
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.EllipseEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.EmptyFillRectEditor
    commentId: T:Global.EmptyFillRectEditor
    language: CSharp
    name:
      CSharp: EmptyFillRectEditor
      VB: EmptyFillRectEditor
    nameWithType:
      CSharp: EmptyFillRectEditor
      VB: EmptyFillRectEditor
    qualifiedName:
      CSharp: EmptyFillRectEditor
      VB: EmptyFillRectEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EmptyFillRectEditor
      path: ''
      startLine: 167175
    syntax:
      content:
        CSharp: 'public class EmptyFillRectEditor : GraphicEditor'
        VB: >-
          Public Class EmptyFillRectEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EmptyFillRectEditor.OnEnable
      commentId: M:Global.EmptyFillRectEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: EmptyFillRectEditor.OnEnable()
        VB: EmptyFillRectEditor.OnEnable()
      qualifiedName:
        CSharp: EmptyFillRectEditor.OnEnable()
        VB: EmptyFillRectEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167179
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.EmptyFillRectEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.EmptyFillRectEditor.OnInspectorGUI
      commentId: M:Global.EmptyFillRectEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: EmptyFillRectEditor.OnInspectorGUI()
        VB: EmptyFillRectEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: EmptyFillRectEditor.OnInspectorGUI()
        VB: EmptyFillRectEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167184
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.EmptyFillRectEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.LineEditor
    commentId: T:Global.LineEditor
    language: CSharp
    name:
      CSharp: LineEditor
      VB: LineEditor
    nameWithType:
      CSharp: LineEditor
      VB: LineEditor
    qualifiedName:
      CSharp: LineEditor
      VB: LineEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LineEditor
      path: ''
      startLine: 167200
    syntax:
      content:
        CSharp: 'public class LineEditor : GraphicEditor'
        VB: >-
          Public Class LineEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LineEditor.materialProp
      commentId: F:Global.LineEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: LineEditor.materialProp
        VB: LineEditor.materialProp
      qualifiedName:
        CSharp: LineEditor.materialProp
        VB: LineEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167209
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.spriteProp
      commentId: F:Global.LineEditor.spriteProp
      language: CSharp
      name:
        CSharp: spriteProp
        VB: spriteProp
      nameWithType:
        CSharp: LineEditor.spriteProp
        VB: LineEditor.spriteProp
      qualifiedName:
        CSharp: LineEditor.spriteProp
        VB: LineEditor.spriteProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spriteProp
        path: ''
        startLine: 167210
      syntax:
        content:
          CSharp: protected SerializedProperty spriteProp
          VB: Protected spriteProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.raycastTargetProp
      commentId: F:Global.LineEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: LineEditor.raycastTargetProp
        VB: LineEditor.raycastTargetProp
      qualifiedName:
        CSharp: LineEditor.raycastTargetProp
        VB: LineEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167211
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.shapePropertiesProp
      commentId: F:Global.LineEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: LineEditor.shapePropertiesProp
        VB: LineEditor.shapePropertiesProp
      qualifiedName:
        CSharp: LineEditor.shapePropertiesProp
        VB: LineEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 167213
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.pointListPropertiesProp
      commentId: F:Global.LineEditor.pointListPropertiesProp
      language: CSharp
      name:
        CSharp: pointListPropertiesProp
        VB: pointListPropertiesProp
      nameWithType:
        CSharp: LineEditor.pointListPropertiesProp
        VB: LineEditor.pointListPropertiesProp
      qualifiedName:
        CSharp: LineEditor.pointListPropertiesProp
        VB: LineEditor.pointListPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pointListPropertiesProp
        path: ''
        startLine: 167214
      syntax:
        content:
          CSharp: protected SerializedProperty pointListPropertiesProp
          VB: Protected pointListPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.linePropertiesPropertiesProp
      commentId: F:Global.LineEditor.linePropertiesPropertiesProp
      language: CSharp
      name:
        CSharp: linePropertiesPropertiesProp
        VB: linePropertiesPropertiesProp
      nameWithType:
        CSharp: LineEditor.linePropertiesPropertiesProp
        VB: LineEditor.linePropertiesPropertiesProp
      qualifiedName:
        CSharp: LineEditor.linePropertiesPropertiesProp
        VB: LineEditor.linePropertiesPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: linePropertiesPropertiesProp
        path: ''
        startLine: 167215
      syntax:
        content:
          CSharp: protected SerializedProperty linePropertiesPropertiesProp
          VB: Protected linePropertiesPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.outlinePropertiesProp
      commentId: F:Global.LineEditor.outlinePropertiesProp
      language: CSharp
      name:
        CSharp: outlinePropertiesProp
        VB: outlinePropertiesProp
      nameWithType:
        CSharp: LineEditor.outlinePropertiesProp
        VB: LineEditor.outlinePropertiesProp
      qualifiedName:
        CSharp: LineEditor.outlinePropertiesProp
        VB: LineEditor.outlinePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: outlinePropertiesProp
        path: ''
        startLine: 167216
      syntax:
        content:
          CSharp: protected SerializedProperty outlinePropertiesProp
          VB: Protected outlinePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.shadowPropertiesProp
      commentId: F:Global.LineEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: LineEditor.shadowPropertiesProp
        VB: LineEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: LineEditor.shadowPropertiesProp
        VB: LineEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167217
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.antiAliasingPropertiesProp
      commentId: F:Global.LineEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: LineEditor.antiAliasingPropertiesProp
        VB: LineEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: LineEditor.antiAliasingPropertiesProp
        VB: LineEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167218
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.LineEditor.OnEnable
      commentId: M:Global.LineEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: LineEditor.OnEnable()
        VB: LineEditor.OnEnable()
      qualifiedName:
        CSharp: LineEditor.OnEnable()
        VB: LineEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167220
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.LineEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.LineEditor.OnDisable
      commentId: M:Global.LineEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: LineEditor.OnDisable()
        VB: LineEditor.OnDisable()
      qualifiedName:
        CSharp: LineEditor.OnDisable()
        VB: LineEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167239
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.LineEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.LineEditor.OnInspectorGUI
      commentId: M:Global.LineEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: LineEditor.OnInspectorGUI()
        VB: LineEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: LineEditor.OnInspectorGUI()
        VB: LineEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167244
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.LineEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.PixelLineEditor
    commentId: T:Global.PixelLineEditor
    language: CSharp
    name:
      CSharp: PixelLineEditor
      VB: PixelLineEditor
    nameWithType:
      CSharp: PixelLineEditor
      VB: PixelLineEditor
    qualifiedName:
      CSharp: PixelLineEditor
      VB: PixelLineEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PixelLineEditor
      path: ''
      startLine: 167302
    syntax:
      content:
        CSharp: 'public class PixelLineEditor : GraphicEditor'
        VB: >-
          Public Class PixelLineEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PixelLineEditor.colorProp
      commentId: F:Global.PixelLineEditor.colorProp
      language: CSharp
      name:
        CSharp: colorProp
        VB: colorProp
      nameWithType:
        CSharp: PixelLineEditor.colorProp
        VB: PixelLineEditor.colorProp
      qualifiedName:
        CSharp: PixelLineEditor.colorProp
        VB: PixelLineEditor.colorProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: colorProp
        path: ''
        startLine: 167306
      syntax:
        content:
          CSharp: protected SerializedProperty colorProp
          VB: Protected colorProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PixelLineEditor.materialProp
      commentId: F:Global.PixelLineEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: PixelLineEditor.materialProp
        VB: PixelLineEditor.materialProp
      qualifiedName:
        CSharp: PixelLineEditor.materialProp
        VB: PixelLineEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167307
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PixelLineEditor.raycastTargetProp
      commentId: F:Global.PixelLineEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: PixelLineEditor.raycastTargetProp
        VB: PixelLineEditor.raycastTargetProp
      qualifiedName:
        CSharp: PixelLineEditor.raycastTargetProp
        VB: PixelLineEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167308
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PixelLineEditor.lineWeightProp
      commentId: F:Global.PixelLineEditor.lineWeightProp
      language: CSharp
      name:
        CSharp: lineWeightProp
        VB: lineWeightProp
      nameWithType:
        CSharp: PixelLineEditor.lineWeightProp
        VB: PixelLineEditor.lineWeightProp
      qualifiedName:
        CSharp: PixelLineEditor.lineWeightProp
        VB: PixelLineEditor.lineWeightProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: lineWeightProp
        path: ''
        startLine: 167310
      syntax:
        content:
          CSharp: protected SerializedProperty lineWeightProp
          VB: Protected lineWeightProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PixelLineEditor.snappedPropertiesProp
      commentId: F:Global.PixelLineEditor.snappedPropertiesProp
      language: CSharp
      name:
        CSharp: snappedPropertiesProp
        VB: snappedPropertiesProp
      nameWithType:
        CSharp: PixelLineEditor.snappedPropertiesProp
        VB: PixelLineEditor.snappedPropertiesProp
      qualifiedName:
        CSharp: PixelLineEditor.snappedPropertiesProp
        VB: PixelLineEditor.snappedPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: snappedPropertiesProp
        path: ''
        startLine: 167311
      syntax:
        content:
          CSharp: protected SerializedProperty snappedPropertiesProp
          VB: Protected snappedPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PixelLineEditor.OnEnable
      commentId: M:Global.PixelLineEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: PixelLineEditor.OnEnable()
        VB: PixelLineEditor.OnEnable()
      qualifiedName:
        CSharp: PixelLineEditor.OnEnable()
        VB: PixelLineEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167313
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.PixelLineEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.PixelLineEditor.OnDisable
      commentId: M:Global.PixelLineEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: PixelLineEditor.OnDisable()
        VB: PixelLineEditor.OnDisable()
      qualifiedName:
        CSharp: PixelLineEditor.OnDisable()
        VB: PixelLineEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167323
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.PixelLineEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.PixelLineEditor.OnInspectorGUI
      commentId: M:Global.PixelLineEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: PixelLineEditor.OnInspectorGUI()
        VB: PixelLineEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: PixelLineEditor.OnInspectorGUI()
        VB: PixelLineEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167328
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.PixelLineEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.PolygonEditor
    commentId: T:Global.PolygonEditor
    language: CSharp
    name:
      CSharp: PolygonEditor
      VB: PolygonEditor
    nameWithType:
      CSharp: PolygonEditor
      VB: PolygonEditor
    qualifiedName:
      CSharp: PolygonEditor
      VB: PolygonEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PolygonEditor
      path: ''
      startLine: 167353
    syntax:
      content:
        CSharp: 'public class PolygonEditor : GraphicEditor'
        VB: >-
          Public Class PolygonEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PolygonEditor.materialProp
      commentId: F:Global.PolygonEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: PolygonEditor.materialProp
        VB: PolygonEditor.materialProp
      qualifiedName:
        CSharp: PolygonEditor.materialProp
        VB: PolygonEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167360
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.raycastTargetProp
      commentId: F:Global.PolygonEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: PolygonEditor.raycastTargetProp
        VB: PolygonEditor.raycastTargetProp
      qualifiedName:
        CSharp: PolygonEditor.raycastTargetProp
        VB: PolygonEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167361
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.shapePropertiesProp
      commentId: F:Global.PolygonEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: PolygonEditor.shapePropertiesProp
        VB: PolygonEditor.shapePropertiesProp
      qualifiedName:
        CSharp: PolygonEditor.shapePropertiesProp
        VB: PolygonEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 167363
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.pointListPropertiesProp
      commentId: F:Global.PolygonEditor.pointListPropertiesProp
      language: CSharp
      name:
        CSharp: pointListPropertiesProp
        VB: pointListPropertiesProp
      nameWithType:
        CSharp: PolygonEditor.pointListPropertiesProp
        VB: PolygonEditor.pointListPropertiesProp
      qualifiedName:
        CSharp: PolygonEditor.pointListPropertiesProp
        VB: PolygonEditor.pointListPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pointListPropertiesProp
        path: ''
        startLine: 167364
      syntax:
        content:
          CSharp: protected SerializedProperty pointListPropertiesProp
          VB: Protected pointListPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.polygonPropertiesProp
      commentId: F:Global.PolygonEditor.polygonPropertiesProp
      language: CSharp
      name:
        CSharp: polygonPropertiesProp
        VB: polygonPropertiesProp
      nameWithType:
        CSharp: PolygonEditor.polygonPropertiesProp
        VB: PolygonEditor.polygonPropertiesProp
      qualifiedName:
        CSharp: PolygonEditor.polygonPropertiesProp
        VB: PolygonEditor.polygonPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: polygonPropertiesProp
        path: ''
        startLine: 167365
      syntax:
        content:
          CSharp: protected SerializedProperty polygonPropertiesProp
          VB: Protected polygonPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.shadowPropertiesProp
      commentId: F:Global.PolygonEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: PolygonEditor.shadowPropertiesProp
        VB: PolygonEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: PolygonEditor.shadowPropertiesProp
        VB: PolygonEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167366
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.antiAliasingPropertiesProp
      commentId: F:Global.PolygonEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: PolygonEditor.antiAliasingPropertiesProp
        VB: PolygonEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: PolygonEditor.antiAliasingPropertiesProp
        VB: PolygonEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167367
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.PolygonEditor.OnEnable
      commentId: M:Global.PolygonEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: PolygonEditor.OnEnable()
        VB: PolygonEditor.OnEnable()
      qualifiedName:
        CSharp: PolygonEditor.OnEnable()
        VB: PolygonEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167369
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.PolygonEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.PolygonEditor.OnDisable
      commentId: M:Global.PolygonEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: PolygonEditor.OnDisable()
        VB: PolygonEditor.OnDisable()
      qualifiedName:
        CSharp: PolygonEditor.OnDisable()
        VB: PolygonEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167386
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.PolygonEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.PolygonEditor.OnInspectorGUI
      commentId: M:Global.PolygonEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: PolygonEditor.OnInspectorGUI()
        VB: PolygonEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: PolygonEditor.OnInspectorGUI()
        VB: PolygonEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167391
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.PolygonEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.RectangleEditor
    commentId: T:Global.RectangleEditor
    language: CSharp
    name:
      CSharp: RectangleEditor
      VB: RectangleEditor
    nameWithType:
      CSharp: RectangleEditor
      VB: RectangleEditor
    qualifiedName:
      CSharp: RectangleEditor
      VB: RectangleEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RectangleEditor
      path: ''
      startLine: 167444
    syntax:
      content:
        CSharp: 'public class RectangleEditor : GraphicEditor'
        VB: >-
          Public Class RectangleEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RectangleEditor.materialProp
      commentId: F:Global.RectangleEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: RectangleEditor.materialProp
        VB: RectangleEditor.materialProp
      qualifiedName:
        CSharp: RectangleEditor.materialProp
        VB: RectangleEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167450
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.spriteProp
      commentId: F:Global.RectangleEditor.spriteProp
      language: CSharp
      name:
        CSharp: spriteProp
        VB: spriteProp
      nameWithType:
        CSharp: RectangleEditor.spriteProp
        VB: RectangleEditor.spriteProp
      qualifiedName:
        CSharp: RectangleEditor.spriteProp
        VB: RectangleEditor.spriteProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spriteProp
        path: ''
        startLine: 167451
      syntax:
        content:
          CSharp: protected SerializedProperty spriteProp
          VB: Protected spriteProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.raycastTargetProp
      commentId: F:Global.RectangleEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: RectangleEditor.raycastTargetProp
        VB: RectangleEditor.raycastTargetProp
      qualifiedName:
        CSharp: RectangleEditor.raycastTargetProp
        VB: RectangleEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167452
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.shapePropertiesProp
      commentId: F:Global.RectangleEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: RectangleEditor.shapePropertiesProp
        VB: RectangleEditor.shapePropertiesProp
      qualifiedName:
        CSharp: RectangleEditor.shapePropertiesProp
        VB: RectangleEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 167454
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.roundedPropertiesProp
      commentId: F:Global.RectangleEditor.roundedPropertiesProp
      language: CSharp
      name:
        CSharp: roundedPropertiesProp
        VB: roundedPropertiesProp
      nameWithType:
        CSharp: RectangleEditor.roundedPropertiesProp
        VB: RectangleEditor.roundedPropertiesProp
      qualifiedName:
        CSharp: RectangleEditor.roundedPropertiesProp
        VB: RectangleEditor.roundedPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: roundedPropertiesProp
        path: ''
        startLine: 167455
      syntax:
        content:
          CSharp: protected SerializedProperty roundedPropertiesProp
          VB: Protected roundedPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.outlinePropertiesProp
      commentId: F:Global.RectangleEditor.outlinePropertiesProp
      language: CSharp
      name:
        CSharp: outlinePropertiesProp
        VB: outlinePropertiesProp
      nameWithType:
        CSharp: RectangleEditor.outlinePropertiesProp
        VB: RectangleEditor.outlinePropertiesProp
      qualifiedName:
        CSharp: RectangleEditor.outlinePropertiesProp
        VB: RectangleEditor.outlinePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: outlinePropertiesProp
        path: ''
        startLine: 167456
      syntax:
        content:
          CSharp: protected SerializedProperty outlinePropertiesProp
          VB: Protected outlinePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.shadowPropertiesProp
      commentId: F:Global.RectangleEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: RectangleEditor.shadowPropertiesProp
        VB: RectangleEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: RectangleEditor.shadowPropertiesProp
        VB: RectangleEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167457
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.antiAliasingPropertiesProp
      commentId: F:Global.RectangleEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: RectangleEditor.antiAliasingPropertiesProp
        VB: RectangleEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: RectangleEditor.antiAliasingPropertiesProp
        VB: RectangleEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167458
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.RectangleEditor.OnEnable
      commentId: M:Global.RectangleEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: RectangleEditor.OnEnable()
        VB: RectangleEditor.OnEnable()
      qualifiedName:
        CSharp: RectangleEditor.OnEnable()
        VB: RectangleEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167460
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.RectangleEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.RectangleEditor.OnDisable
      commentId: M:Global.RectangleEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: RectangleEditor.OnDisable()
        VB: RectangleEditor.OnDisable()
      qualifiedName:
        CSharp: RectangleEditor.OnDisable()
        VB: RectangleEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167475
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.RectangleEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.RectangleEditor.OnInspectorGUI
      commentId: M:Global.RectangleEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: RectangleEditor.OnInspectorGUI()
        VB: RectangleEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: RectangleEditor.OnInspectorGUI()
        VB: RectangleEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167480
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.RectangleEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.SectorEditor
    commentId: T:Global.SectorEditor
    language: CSharp
    name:
      CSharp: SectorEditor
      VB: SectorEditor
    nameWithType:
      CSharp: SectorEditor
      VB: SectorEditor
    qualifiedName:
      CSharp: SectorEditor
      VB: SectorEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SectorEditor
      path: ''
      startLine: 167510
    syntax:
      content:
        CSharp: 'public class SectorEditor : GraphicEditor'
        VB: >-
          Public Class SectorEditor

              Inherits GraphicEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SectorEditor.materialProp
      commentId: F:Global.SectorEditor.materialProp
      language: CSharp
      name:
        CSharp: materialProp
        VB: materialProp
      nameWithType:
        CSharp: SectorEditor.materialProp
        VB: SectorEditor.materialProp
      qualifiedName:
        CSharp: SectorEditor.materialProp
        VB: SectorEditor.materialProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materialProp
        path: ''
        startLine: 167514
      syntax:
        content:
          CSharp: protected SerializedProperty materialProp
          VB: Protected materialProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.raycastTargetProp
      commentId: F:Global.SectorEditor.raycastTargetProp
      language: CSharp
      name:
        CSharp: raycastTargetProp
        VB: raycastTargetProp
      nameWithType:
        CSharp: SectorEditor.raycastTargetProp
        VB: SectorEditor.raycastTargetProp
      qualifiedName:
        CSharp: SectorEditor.raycastTargetProp
        VB: SectorEditor.raycastTargetProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: raycastTargetProp
        path: ''
        startLine: 167515
      syntax:
        content:
          CSharp: protected SerializedProperty raycastTargetProp
          VB: Protected raycastTargetProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.shapePropertiesProp
      commentId: F:Global.SectorEditor.shapePropertiesProp
      language: CSharp
      name:
        CSharp: shapePropertiesProp
        VB: shapePropertiesProp
      nameWithType:
        CSharp: SectorEditor.shapePropertiesProp
        VB: SectorEditor.shapePropertiesProp
      qualifiedName:
        CSharp: SectorEditor.shapePropertiesProp
        VB: SectorEditor.shapePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shapePropertiesProp
        path: ''
        startLine: 167517
      syntax:
        content:
          CSharp: protected SerializedProperty shapePropertiesProp
          VB: Protected shapePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.ellipsePropertiesProp
      commentId: F:Global.SectorEditor.ellipsePropertiesProp
      language: CSharp
      name:
        CSharp: ellipsePropertiesProp
        VB: ellipsePropertiesProp
      nameWithType:
        CSharp: SectorEditor.ellipsePropertiesProp
        VB: SectorEditor.ellipsePropertiesProp
      qualifiedName:
        CSharp: SectorEditor.ellipsePropertiesProp
        VB: SectorEditor.ellipsePropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ellipsePropertiesProp
        path: ''
        startLine: 167518
      syntax:
        content:
          CSharp: protected SerializedProperty ellipsePropertiesProp
          VB: Protected ellipsePropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.arcPropertiesProp
      commentId: F:Global.SectorEditor.arcPropertiesProp
      language: CSharp
      name:
        CSharp: arcPropertiesProp
        VB: arcPropertiesProp
      nameWithType:
        CSharp: SectorEditor.arcPropertiesProp
        VB: SectorEditor.arcPropertiesProp
      qualifiedName:
        CSharp: SectorEditor.arcPropertiesProp
        VB: SectorEditor.arcPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: arcPropertiesProp
        path: ''
        startLine: 167519
      syntax:
        content:
          CSharp: protected SerializedProperty arcPropertiesProp
          VB: Protected arcPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.shadowPropertiesProp
      commentId: F:Global.SectorEditor.shadowPropertiesProp
      language: CSharp
      name:
        CSharp: shadowPropertiesProp
        VB: shadowPropertiesProp
      nameWithType:
        CSharp: SectorEditor.shadowPropertiesProp
        VB: SectorEditor.shadowPropertiesProp
      qualifiedName:
        CSharp: SectorEditor.shadowPropertiesProp
        VB: SectorEditor.shadowPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shadowPropertiesProp
        path: ''
        startLine: 167520
      syntax:
        content:
          CSharp: protected SerializedProperty shadowPropertiesProp
          VB: Protected shadowPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.antiAliasingPropertiesProp
      commentId: F:Global.SectorEditor.antiAliasingPropertiesProp
      language: CSharp
      name:
        CSharp: antiAliasingPropertiesProp
        VB: antiAliasingPropertiesProp
      nameWithType:
        CSharp: SectorEditor.antiAliasingPropertiesProp
        VB: SectorEditor.antiAliasingPropertiesProp
      qualifiedName:
        CSharp: SectorEditor.antiAliasingPropertiesProp
        VB: SectorEditor.antiAliasingPropertiesProp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: antiAliasingPropertiesProp
        path: ''
        startLine: 167521
      syntax:
        content:
          CSharp: protected SerializedProperty antiAliasingPropertiesProp
          VB: Protected antiAliasingPropertiesProp As SerializedProperty
        return:
          type: Global.SerializedProperty
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.SectorEditor.OnEnable
      commentId: M:Global.SectorEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: SectorEditor.OnEnable()
        VB: SectorEditor.OnEnable()
      qualifiedName:
        CSharp: SectorEditor.OnEnable()
        VB: SectorEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnable
        path: ''
        startLine: 167523
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: Global.SectorEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.SectorEditor.OnDisable
      commentId: M:Global.SectorEditor.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: SectorEditor.OnDisable()
        VB: SectorEditor.OnDisable()
      qualifiedName:
        CSharp: SectorEditor.OnDisable()
        VB: SectorEditor.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisable
        path: ''
        startLine: 167535
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: Global.SectorEditor.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Global.SectorEditor.OnInspectorGUI
      commentId: M:Global.SectorEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: SectorEditor.OnInspectorGUI()
        VB: SectorEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: SectorEditor.OnInspectorGUI()
        VB: SectorEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 167540
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.SectorEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.SceneViewModelOverride
    commentId: T:Global.SceneViewModelOverride
    language: CSharp
    name:
      CSharp: SceneViewModelOverride
      VB: SceneViewModelOverride
    nameWithType:
      CSharp: SceneViewModelOverride
      VB: SceneViewModelOverride
    qualifiedName:
      CSharp: SceneViewModelOverride
      VB: SceneViewModelOverride
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SceneViewModelOverride
      path: ''
      startLine: 267075
    syntax:
      content:
        CSharp: 'public class SceneViewModelOverride : MonoBehaviour'
        VB: >-
          Public Class SceneViewModelOverride

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.Object2Terrain
    commentId: T:Global.Object2Terrain
    language: CSharp
    name:
      CSharp: Object2Terrain
      VB: Object2Terrain
    nameWithType:
      CSharp: Object2Terrain
      VB: Object2Terrain
    qualifiedName:
      CSharp: Object2Terrain
      VB: Object2Terrain
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Object2Terrain
      path: ''
      startLine: 267924
    syntax:
      content:
        CSharp: 'public class Object2Terrain : EditorWindow'
        VB: >-
          Public Class Object2Terrain

              Inherits EditorWindow
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.TriLibCheckPlugins
    commentId: T:Global.TriLibCheckPlugins
    language: CSharp
    name:
      CSharp: TriLibCheckPlugins
      VB: TriLibCheckPlugins
    nameWithType:
      CSharp: TriLibCheckPlugins
      VB: TriLibCheckPlugins
    qualifiedName:
      CSharp: TriLibCheckPlugins
      VB: TriLibCheckPlugins
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TriLibCheckPlugins
      path: ''
      startLine: 276069
    syntax:
      content:
        CSharp: 'public class TriLibCheckPlugins : IPreprocessBuild, IPostprocessBuild'
        VB: >-
          Public Class TriLibCheckPlugins

              Inherits IPreprocessBuild

              Implements IPostprocessBuild
    inheritance:
    - System.Object
    implements:
    - Global.IPostprocessBuild
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TriLibCheckPlugins.DebugSymbol
      commentId: F:Global.TriLibCheckPlugins.DebugSymbol
      language: CSharp
      name:
        CSharp: DebugSymbol
        VB: DebugSymbol
      nameWithType:
        CSharp: TriLibCheckPlugins.DebugSymbol
        VB: TriLibCheckPlugins.DebugSymbol
      qualifiedName:
        CSharp: TriLibCheckPlugins.DebugSymbol
        VB: TriLibCheckPlugins.DebugSymbol
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DebugSymbol
        path: ''
        startLine: 276076
      syntax:
        content:
          CSharp: public const string DebugSymbol = "TRILIB_OUTPUT_MESSAGES"
          VB: Public Const DebugSymbol As String = "TRILIB_OUTPUT_MESSAGES"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TriLibCheckPlugins.ZipSymbol
      commentId: F:Global.TriLibCheckPlugins.ZipSymbol
      language: CSharp
      name:
        CSharp: ZipSymbol
        VB: ZipSymbol
      nameWithType:
        CSharp: TriLibCheckPlugins.ZipSymbol
        VB: TriLibCheckPlugins.ZipSymbol
      qualifiedName:
        CSharp: TriLibCheckPlugins.ZipSymbol
        VB: TriLibCheckPlugins.ZipSymbol
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ZipSymbol
        path: ''
        startLine: 276077
      syntax:
        content:
          CSharp: public const string ZipSymbol = "TRILIB_USE_ZIP"
          VB: Public Const ZipSymbol As String = "TRILIB_USE_ZIP"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TriLibCheckPlugins.DebugEnabledMenuPath
      commentId: F:Global.TriLibCheckPlugins.DebugEnabledMenuPath
      language: CSharp
      name:
        CSharp: DebugEnabledMenuPath
        VB: DebugEnabledMenuPath
      nameWithType:
        CSharp: TriLibCheckPlugins.DebugEnabledMenuPath
        VB: TriLibCheckPlugins.DebugEnabledMenuPath
      qualifiedName:
        CSharp: TriLibCheckPlugins.DebugEnabledMenuPath
        VB: TriLibCheckPlugins.DebugEnabledMenuPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DebugEnabledMenuPath
        path: ''
        startLine: 276078
      syntax:
        content:
          CSharp: public const string DebugEnabledMenuPath = "TriLib/Enable Debug"
          VB: Public Const DebugEnabledMenuPath As String = "TriLib/Enable Debug"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TriLibCheckPlugins.ZipEnabledMenuPath
      commentId: F:Global.TriLibCheckPlugins.ZipEnabledMenuPath
      language: CSharp
      name:
        CSharp: ZipEnabledMenuPath
        VB: ZipEnabledMenuPath
      nameWithType:
        CSharp: TriLibCheckPlugins.ZipEnabledMenuPath
        VB: TriLibCheckPlugins.ZipEnabledMenuPath
      qualifiedName:
        CSharp: TriLibCheckPlugins.ZipEnabledMenuPath
        VB: TriLibCheckPlugins.ZipEnabledMenuPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ZipEnabledMenuPath
        path: ''
        startLine: 276079
      syntax:
        content:
          CSharp: public const string ZipEnabledMenuPath = "TriLib/Enable Zip loading"
          VB: Public Const ZipEnabledMenuPath As String = "TriLib/Enable Zip loading"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TriLibCheckPlugins.PluginsLoaded
      commentId: P:Global.TriLibCheckPlugins.PluginsLoaded
      language: CSharp
      name:
        CSharp: PluginsLoaded
        VB: PluginsLoaded
      nameWithType:
        CSharp: TriLibCheckPlugins.PluginsLoaded
        VB: TriLibCheckPlugins.PluginsLoaded
      qualifiedName:
        CSharp: TriLibCheckPlugins.PluginsLoaded
        VB: TriLibCheckPlugins.PluginsLoaded
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PluginsLoaded
        path: ''
        startLine: 276083
      syntax:
        content:
          CSharp: public static bool PluginsLoaded { get; }
          VB: Public Shared ReadOnly Property PluginsLoaded As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.TriLibCheckPlugins.PluginsLoaded*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Global.TriLibCheckPlugins.callbackOrder
      commentId: P:Global.TriLibCheckPlugins.callbackOrder
      language: CSharp
      name:
        CSharp: callbackOrder
        VB: callbackOrder
      nameWithType:
        CSharp: TriLibCheckPlugins.callbackOrder
        VB: TriLibCheckPlugins.callbackOrder
      qualifiedName:
        CSharp: TriLibCheckPlugins.callbackOrder
        VB: TriLibCheckPlugins.callbackOrder
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: callbackOrder
        path: ''
        startLine: 276085
      syntax:
        content:
          CSharp: public int callbackOrder { get; }
          VB: Public ReadOnly Property callbackOrder As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.TriLibCheckPlugins.callbackOrder*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.TriLibCheckPlugins.DebugEnabled
      commentId: M:Global.TriLibCheckPlugins.DebugEnabled
      language: CSharp
      name:
        CSharp: DebugEnabled()
        VB: DebugEnabled()
      nameWithType:
        CSharp: TriLibCheckPlugins.DebugEnabled()
        VB: TriLibCheckPlugins.DebugEnabled()
      qualifiedName:
        CSharp: TriLibCheckPlugins.DebugEnabled()
        VB: TriLibCheckPlugins.DebugEnabled()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DebugEnabled
        path: ''
        startLine: 276162
      syntax:
        content:
          CSharp: public static void DebugEnabled()
          VB: Public Shared Sub DebugEnabled
      overload: Global.TriLibCheckPlugins.DebugEnabled*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TriLibCheckPlugins.DebugEnabledValidate
      commentId: M:Global.TriLibCheckPlugins.DebugEnabledValidate
      language: CSharp
      name:
        CSharp: DebugEnabledValidate()
        VB: DebugEnabledValidate()
      nameWithType:
        CSharp: TriLibCheckPlugins.DebugEnabledValidate()
        VB: TriLibCheckPlugins.DebugEnabledValidate()
      qualifiedName:
        CSharp: TriLibCheckPlugins.DebugEnabledValidate()
        VB: TriLibCheckPlugins.DebugEnabledValidate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DebugEnabledValidate
        path: ''
        startLine: 276168
      syntax:
        content:
          CSharp: public static bool DebugEnabledValidate()
          VB: Public Shared Function DebugEnabledValidate As Boolean
        return:
          type: System.Boolean
      overload: Global.TriLibCheckPlugins.DebugEnabledValidate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TriLibCheckPlugins.ZipEnabled
      commentId: M:Global.TriLibCheckPlugins.ZipEnabled
      language: CSharp
      name:
        CSharp: ZipEnabled()
        VB: ZipEnabled()
      nameWithType:
        CSharp: TriLibCheckPlugins.ZipEnabled()
        VB: TriLibCheckPlugins.ZipEnabled()
      qualifiedName:
        CSharp: TriLibCheckPlugins.ZipEnabled()
        VB: TriLibCheckPlugins.ZipEnabled()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ZipEnabled
        path: ''
        startLine: 276175
      syntax:
        content:
          CSharp: public static void ZipEnabled()
          VB: Public Shared Sub ZipEnabled
      overload: Global.TriLibCheckPlugins.ZipEnabled*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TriLibCheckPlugins.ZipEnabledValidate
      commentId: M:Global.TriLibCheckPlugins.ZipEnabledValidate
      language: CSharp
      name:
        CSharp: ZipEnabledValidate()
        VB: ZipEnabledValidate()
      nameWithType:
        CSharp: TriLibCheckPlugins.ZipEnabledValidate()
        VB: TriLibCheckPlugins.ZipEnabledValidate()
      qualifiedName:
        CSharp: TriLibCheckPlugins.ZipEnabledValidate()
        VB: TriLibCheckPlugins.ZipEnabledValidate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ZipEnabledValidate
        path: ''
        startLine: 276181
      syntax:
        content:
          CSharp: public static bool ZipEnabledValidate()
          VB: Public Shared Function ZipEnabledValidate As Boolean
        return:
          type: System.Boolean
      overload: Global.TriLibCheckPlugins.ZipEnabledValidate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.TriLibCheckPlugins.OnPreprocessBuild(BuildTarget,System.String)
      commentId: M:Global.TriLibCheckPlugins.OnPreprocessBuild(BuildTarget,System.String)
      language: CSharp
      name:
        CSharp: OnPreprocessBuild(BuildTarget, String)
        VB: OnPreprocessBuild(BuildTarget, String)
      nameWithType:
        CSharp: TriLibCheckPlugins.OnPreprocessBuild(BuildTarget, String)
        VB: TriLibCheckPlugins.OnPreprocessBuild(BuildTarget, String)
      qualifiedName:
        CSharp: TriLibCheckPlugins.OnPreprocessBuild(BuildTarget, System.String)
        VB: TriLibCheckPlugins.OnPreprocessBuild(BuildTarget, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPreprocessBuild
        path: ''
        startLine: 276227
      syntax:
        content:
          CSharp: public void OnPreprocessBuild(BuildTarget target, string path)
          VB: Public Sub OnPreprocessBuild(target As BuildTarget, path As String)
        parameters:
        - id: target
          type: Global.BuildTarget
        - id: path
          type: System.String
      overload: Global.TriLibCheckPlugins.OnPreprocessBuild*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TriLibCheckPlugins.OnPostprocessBuild(BuildTarget,System.String)
      commentId: M:Global.TriLibCheckPlugins.OnPostprocessBuild(BuildTarget,System.String)
      language: CSharp
      name:
        CSharp: OnPostprocessBuild(BuildTarget, String)
        VB: OnPostprocessBuild(BuildTarget, String)
      nameWithType:
        CSharp: TriLibCheckPlugins.OnPostprocessBuild(BuildTarget, String)
        VB: TriLibCheckPlugins.OnPostprocessBuild(BuildTarget, String)
      qualifiedName:
        CSharp: TriLibCheckPlugins.OnPostprocessBuild(BuildTarget, System.String)
        VB: TriLibCheckPlugins.OnPostprocessBuild(BuildTarget, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPostprocessBuild
        path: ''
        startLine: 276304
      syntax:
        content:
          CSharp: public void OnPostprocessBuild(BuildTarget target, string path)
          VB: Public Sub OnPostprocessBuild(target As BuildTarget, path As String)
        parameters:
        - id: target
          type: Global.BuildTarget
        - id: path
          type: System.String
      overload: Global.TriLibCheckPlugins.OnPostprocessBuild*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Global.TerrainSmoothingSample:
    name:
      CSharp:
      - id: Global.TerrainSmoothingSample
        name: TerrainSmoothingSample
        nameWithType: TerrainSmoothingSample
        qualifiedName: TerrainSmoothingSample
      VB:
      - id: Global.TerrainSmoothingSample
        name: TerrainSmoothingSample
        nameWithType: TerrainSmoothingSample
        qualifiedName: TerrainSmoothingSample
    isDefinition: true
    commentId: T:Global.TerrainSmoothingSample
  Global.WallToolSample:
    name:
      CSharp:
      - id: Global.WallToolSample
        name: WallToolSample
        nameWithType: WallToolSample
        qualifiedName: WallToolSample
      VB:
      - id: Global.WallToolSample
        name: WallToolSample
        nameWithType: WallToolSample
        qualifiedName: WallToolSample
    isDefinition: true
    commentId: T:Global.WallToolSample
  Global.PatchUtility.PatchPersistentClassMappings*:
    name:
      CSharp:
      - id: Global.PatchUtility.PatchPersistentClassMappings*
        name: PatchPersistentClassMappings
        nameWithType: PatchUtility.PatchPersistentClassMappings
        qualifiedName: PatchUtility.PatchPersistentClassMappings
      VB:
      - id: Global.PatchUtility.PatchPersistentClassMappings*
        name: PatchPersistentClassMappings
        nameWithType: PatchUtility.PatchPersistentClassMappings
        qualifiedName: PatchUtility.PatchPersistentClassMappings
    isDefinition: true
    commentId: Overload:Global.PatchUtility.PatchPersistentClassMappings
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Global.PatchUtility.UpdateMappedAssemblyNames3*:
    name:
      CSharp:
      - id: Global.PatchUtility.UpdateMappedAssemblyNames3*
        name: UpdateMappedAssemblyNames3
        nameWithType: PatchUtility.UpdateMappedAssemblyNames3
        qualifiedName: PatchUtility.UpdateMappedAssemblyNames3
      VB:
      - id: Global.PatchUtility.UpdateMappedAssemblyNames3*
        name: UpdateMappedAssemblyNames3
        nameWithType: PatchUtility.UpdateMappedAssemblyNames3
        qualifiedName: PatchUtility.UpdateMappedAssemblyNames3
    isDefinition: true
    commentId: Overload:Global.PatchUtility.UpdateMappedAssemblyNames3
  Global.PatchUtility:
    name:
      CSharp:
      - id: Global.PatchUtility
        name: PatchUtility
        nameWithType: PatchUtility
        qualifiedName: PatchUtility
      VB:
      - id: Global.PatchUtility
        name: PatchUtility
        nameWithType: PatchUtility
        qualifiedName: PatchUtility
    isDefinition: true
    commentId: T:Global.PatchUtility
  Global.ColorValues:
    name:
      CSharp:
      - id: Global.ColorValues
        name: ColorValues
        nameWithType: ColorValues
        qualifiedName: ColorValues
      VB:
      - id: Global.ColorValues
        name: ColorValues
        nameWithType: ColorValues
        qualifiedName: ColorValues
    isDefinition: true
    commentId: T:Global.ColorValues
  Global.ColorChangedEvent:
    name:
      CSharp:
      - id: Global.ColorChangedEvent
        name: ColorChangedEvent
        nameWithType: ColorChangedEvent
        qualifiedName: ColorChangedEvent
      VB:
      - id: Global.ColorChangedEvent
        name: ColorChangedEvent
        nameWithType: ColorChangedEvent
        qualifiedName: ColorChangedEvent
    isDefinition: true
    commentId: T:Global.ColorChangedEvent
  Global.HSVChangedEvent:
    name:
      CSharp:
      - id: Global.HSVChangedEvent
        name: HSVChangedEvent
        nameWithType: HSVChangedEvent
        qualifiedName: HSVChangedEvent
      VB:
      - id: Global.HSVChangedEvent
        name: HSVChangedEvent
        nameWithType: HSVChangedEvent
        qualifiedName: HSVChangedEvent
    isDefinition: true
    commentId: T:Global.HSVChangedEvent
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Vector2'
  Global.TiltWindow:
    name:
      CSharp:
      - id: Global.TiltWindow
        name: TiltWindow
        nameWithType: TiltWindow
        qualifiedName: TiltWindow
      VB:
      - id: Global.TiltWindow
        name: TiltWindow
        nameWithType: TiltWindow
        qualifiedName: TiltWindow
    isDefinition: true
    commentId: T:Global.TiltWindow
  Global.ColorPicker:
    name:
      CSharp:
      - id: Global.ColorPicker
        name: ColorPicker
        nameWithType: ColorPicker
        qualifiedName: ColorPicker
      VB:
      - id: Global.ColorPicker
        name: ColorPicker
        nameWithType: ColorPicker
        qualifiedName: ColorPicker
    isDefinition: true
    commentId: T:Global.ColorPicker
  Global.ColorImage:
    name:
      CSharp:
      - id: Global.ColorImage
        name: ColorImage
        nameWithType: ColorImage
        qualifiedName: ColorImage
      VB:
      - id: Global.ColorImage
        name: ColorImage
        nameWithType: ColorImage
        qualifiedName: ColorImage
    isDefinition: true
    commentId: T:Global.ColorImage
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.ColorLabel:
    name:
      CSharp:
      - id: Global.ColorLabel
        name: ColorLabel
        nameWithType: ColorLabel
        qualifiedName: ColorLabel
      VB:
      - id: Global.ColorLabel
        name: ColorLabel
        nameWithType: ColorLabel
        qualifiedName: ColorLabel
    isDefinition: true
    commentId: T:Global.ColorLabel
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Global.ColorPicker.CurrentColor*:
    name:
      CSharp:
      - id: Global.ColorPicker.CurrentColor*
        name: CurrentColor
        nameWithType: ColorPicker.CurrentColor
        qualifiedName: ColorPicker.CurrentColor
      VB:
      - id: Global.ColorPicker.CurrentColor*
        name: CurrentColor
        nameWithType: ColorPicker.CurrentColor
        qualifiedName: ColorPicker.CurrentColor
    isDefinition: true
    commentId: Overload:Global.ColorPicker.CurrentColor
  Global.ColorPicker.H*:
    name:
      CSharp:
      - id: Global.ColorPicker.H*
        name: H
        nameWithType: ColorPicker.H
        qualifiedName: ColorPicker.H
      VB:
      - id: Global.ColorPicker.H*
        name: H
        nameWithType: ColorPicker.H
        qualifiedName: ColorPicker.H
    isDefinition: true
    commentId: Overload:Global.ColorPicker.H
  Global.ColorPicker.S*:
    name:
      CSharp:
      - id: Global.ColorPicker.S*
        name: S
        nameWithType: ColorPicker.S
        qualifiedName: ColorPicker.S
      VB:
      - id: Global.ColorPicker.S*
        name: S
        nameWithType: ColorPicker.S
        qualifiedName: ColorPicker.S
    isDefinition: true
    commentId: Overload:Global.ColorPicker.S
  Global.ColorPicker.V*:
    name:
      CSharp:
      - id: Global.ColorPicker.V*
        name: V
        nameWithType: ColorPicker.V
        qualifiedName: ColorPicker.V
      VB:
      - id: Global.ColorPicker.V*
        name: V
        nameWithType: ColorPicker.V
        qualifiedName: ColorPicker.V
    isDefinition: true
    commentId: Overload:Global.ColorPicker.V
  Global.ColorPicker.R*:
    name:
      CSharp:
      - id: Global.ColorPicker.R*
        name: R
        nameWithType: ColorPicker.R
        qualifiedName: ColorPicker.R
      VB:
      - id: Global.ColorPicker.R*
        name: R
        nameWithType: ColorPicker.R
        qualifiedName: ColorPicker.R
    isDefinition: true
    commentId: Overload:Global.ColorPicker.R
  Global.ColorPicker.G*:
    name:
      CSharp:
      - id: Global.ColorPicker.G*
        name: G
        nameWithType: ColorPicker.G
        qualifiedName: ColorPicker.G
      VB:
      - id: Global.ColorPicker.G*
        name: G
        nameWithType: ColorPicker.G
        qualifiedName: ColorPicker.G
    isDefinition: true
    commentId: Overload:Global.ColorPicker.G
  Global.ColorPicker.B*:
    name:
      CSharp:
      - id: Global.ColorPicker.B*
        name: B
        nameWithType: ColorPicker.B
        qualifiedName: ColorPicker.B
      VB:
      - id: Global.ColorPicker.B*
        name: B
        nameWithType: ColorPicker.B
        qualifiedName: ColorPicker.B
    isDefinition: true
    commentId: Overload:Global.ColorPicker.B
  Global.ColorPicker.AssignColor*:
    name:
      CSharp:
      - id: Global.ColorPicker.AssignColor*
        name: AssignColor
        nameWithType: ColorPicker.AssignColor
        qualifiedName: ColorPicker.AssignColor
      VB:
      - id: Global.ColorPicker.AssignColor*
        name: AssignColor
        nameWithType: ColorPicker.AssignColor
        qualifiedName: ColorPicker.AssignColor
    isDefinition: true
    commentId: Overload:Global.ColorPicker.AssignColor
  Global.ColorPicker.GetValue*:
    name:
      CSharp:
      - id: Global.ColorPicker.GetValue*
        name: GetValue
        nameWithType: ColorPicker.GetValue
        qualifiedName: ColorPicker.GetValue
      VB:
      - id: Global.ColorPicker.GetValue*
        name: GetValue
        nameWithType: ColorPicker.GetValue
        qualifiedName: ColorPicker.GetValue
    isDefinition: true
    commentId: Overload:Global.ColorPicker.GetValue
  Global.GameObject[]:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
  Global.ColorPresets.CreatePresetButton*:
    name:
      CSharp:
      - id: Global.ColorPresets.CreatePresetButton*
        name: CreatePresetButton
        nameWithType: ColorPresets.CreatePresetButton
        qualifiedName: ColorPresets.CreatePresetButton
      VB:
      - id: Global.ColorPresets.CreatePresetButton*
        name: CreatePresetButton
        nameWithType: ColorPresets.CreatePresetButton
        qualifiedName: ColorPresets.CreatePresetButton
    isDefinition: true
    commentId: Overload:Global.ColorPresets.CreatePresetButton
  Global.ColorPresets.PresetSelect*:
    name:
      CSharp:
      - id: Global.ColorPresets.PresetSelect*
        name: PresetSelect
        nameWithType: ColorPresets.PresetSelect
        qualifiedName: ColorPresets.PresetSelect
      VB:
      - id: Global.ColorPresets.PresetSelect*
        name: PresetSelect
        nameWithType: ColorPresets.PresetSelect
        qualifiedName: ColorPresets.PresetSelect
    isDefinition: true
    commentId: Overload:Global.ColorPresets.PresetSelect
  Global.ColorPresets:
    name:
      CSharp:
      - id: Global.ColorPresets
        name: ColorPresets
        nameWithType: ColorPresets
        qualifiedName: ColorPresets
      VB:
      - id: Global.ColorPresets
        name: ColorPresets
        nameWithType: ColorPresets
        qualifiedName: ColorPresets
    isDefinition: true
    commentId: T:Global.ColorPresets
  Global.ColorSlider:
    name:
      CSharp:
      - id: Global.ColorSlider
        name: ColorSlider
        nameWithType: ColorSlider
        qualifiedName: ColorSlider
      VB:
      - id: Global.ColorSlider
        name: ColorSlider
        nameWithType: ColorSlider
        qualifiedName: ColorSlider
    isDefinition: true
    commentId: T:Global.ColorSlider
  Global.Slider.Direction:
    name:
      CSharp:
      - id: Global.Slider.Direction
        name: Slider.Direction
        nameWithType: Slider.Direction
        qualifiedName: Slider.Direction
        isExternal: true
      VB:
      - id: Global.Slider.Direction
        name: Slider.Direction
        nameWithType: Slider.Direction
        qualifiedName: Slider.Direction
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Slider.Direction'
  Global.ColorSliderImage:
    name:
      CSharp:
      - id: Global.ColorSliderImage
        name: ColorSliderImage
        nameWithType: ColorSliderImage
        qualifiedName: ColorSliderImage
      VB:
      - id: Global.ColorSliderImage
        name: ColorSliderImage
        nameWithType: ColorSliderImage
        qualifiedName: ColorSliderImage
    isDefinition: true
    commentId: T:Global.ColorSliderImage
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Global.HexColorField:
    name:
      CSharp:
      - id: Global.HexColorField
        name: HexColorField
        nameWithType: HexColorField
        qualifiedName: HexColorField
      VB:
      - id: Global.HexColorField
        name: HexColorField
        nameWithType: HexColorField
        qualifiedName: HexColorField
    isDefinition: true
    commentId: T:Global.HexColorField
  Global.RectTransform:
    name:
      CSharp:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
  Global.SVBoxSlider.rectTransform*:
    name:
      CSharp:
      - id: Global.SVBoxSlider.rectTransform*
        name: rectTransform
        nameWithType: SVBoxSlider.rectTransform
        qualifiedName: SVBoxSlider.rectTransform
      VB:
      - id: Global.SVBoxSlider.rectTransform*
        name: rectTransform
        nameWithType: SVBoxSlider.rectTransform
        qualifiedName: SVBoxSlider.rectTransform
    isDefinition: true
    commentId: Overload:Global.SVBoxSlider.rectTransform
  Global.SVBoxSlider:
    name:
      CSharp:
      - id: Global.SVBoxSlider
        name: SVBoxSlider
        nameWithType: SVBoxSlider
        qualifiedName: SVBoxSlider
      VB:
      - id: Global.SVBoxSlider
        name: SVBoxSlider
        nameWithType: SVBoxSlider
        qualifiedName: SVBoxSlider
    isDefinition: true
    commentId: T:Global.SVBoxSlider
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Global.HsvColor:
    name:
      CSharp:
      - id: Global.HsvColor
        name: HsvColor
        nameWithType: HsvColor
        qualifiedName: HsvColor
      VB:
      - id: Global.HsvColor
        name: HsvColor
        nameWithType: HsvColor
        qualifiedName: HsvColor
    isDefinition: true
    commentId: T:Global.HsvColor
  Global.HSVUtil.ConvertRgbToHsv*:
    name:
      CSharp:
      - id: Global.HSVUtil.ConvertRgbToHsv*
        name: ConvertRgbToHsv
        nameWithType: HSVUtil.ConvertRgbToHsv
        qualifiedName: HSVUtil.ConvertRgbToHsv
      VB:
      - id: Global.HSVUtil.ConvertRgbToHsv*
        name: ConvertRgbToHsv
        nameWithType: HSVUtil.ConvertRgbToHsv
        qualifiedName: HSVUtil.ConvertRgbToHsv
    isDefinition: true
    commentId: Overload:Global.HSVUtil.ConvertRgbToHsv
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  Global.HSVUtil.ConvertHsvToRgb*:
    name:
      CSharp:
      - id: Global.HSVUtil.ConvertHsvToRgb*
        name: ConvertHsvToRgb
        nameWithType: HSVUtil.ConvertHsvToRgb
        qualifiedName: HSVUtil.ConvertHsvToRgb
      VB:
      - id: Global.HSVUtil.ConvertHsvToRgb*
        name: ConvertHsvToRgb
        nameWithType: HSVUtil.ConvertHsvToRgb
        qualifiedName: HSVUtil.ConvertHsvToRgb
    isDefinition: true
    commentId: Overload:Global.HSVUtil.ConvertHsvToRgb
  Global.HSVUtil:
    name:
      CSharp:
      - id: Global.HSVUtil
        name: HSVUtil
        nameWithType: HSVUtil
        qualifiedName: HSVUtil
      VB:
      - id: Global.HSVUtil
        name: HSVUtil
        nameWithType: HSVUtil
        qualifiedName: HSVUtil
    isDefinition: true
    commentId: T:Global.HSVUtil
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  Global.HsvColor.normalizedH*:
    name:
      CSharp:
      - id: Global.HsvColor.normalizedH*
        name: normalizedH
        nameWithType: HsvColor.normalizedH
        qualifiedName: HsvColor.normalizedH
      VB:
      - id: Global.HsvColor.normalizedH*
        name: normalizedH
        nameWithType: HsvColor.normalizedH
        qualifiedName: HsvColor.normalizedH
    isDefinition: true
    commentId: Overload:Global.HsvColor.normalizedH
  Global.HsvColor.normalizedS*:
    name:
      CSharp:
      - id: Global.HsvColor.normalizedS*
        name: normalizedS
        nameWithType: HsvColor.normalizedS
        qualifiedName: HsvColor.normalizedS
      VB:
      - id: Global.HsvColor.normalizedS*
        name: normalizedS
        nameWithType: HsvColor.normalizedS
        qualifiedName: HsvColor.normalizedS
    isDefinition: true
    commentId: Overload:Global.HsvColor.normalizedS
  Global.HsvColor.normalizedV*:
    name:
      CSharp:
      - id: Global.HsvColor.normalizedV*
        name: normalizedV
        nameWithType: HsvColor.normalizedV
        qualifiedName: HsvColor.normalizedV
      VB:
      - id: Global.HsvColor.normalizedV*
        name: normalizedV
        nameWithType: HsvColor.normalizedV
        qualifiedName: HsvColor.normalizedV
    isDefinition: true
    commentId: Overload:Global.HsvColor.normalizedV
  Global.HsvColor.#ctor*:
    name:
      CSharp:
      - id: Global.HsvColor.#ctor*
        name: HsvColor
        nameWithType: HsvColor.HsvColor
        qualifiedName: HsvColor.HsvColor
      VB:
      - id: Global.HsvColor.#ctor*
        name: HsvColor
        nameWithType: HsvColor.HsvColor
        qualifiedName: HsvColor.HsvColor
    isDefinition: true
    commentId: Overload:Global.HsvColor.#ctor
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  Global.HsvColor.ToString*:
    name:
      CSharp:
      - id: Global.HsvColor.ToString*
        name: ToString
        nameWithType: HsvColor.ToString
        qualifiedName: HsvColor.ToString
      VB:
      - id: Global.HsvColor.ToString*
        name: ToString
        nameWithType: HsvColor.ToString
        qualifiedName: HsvColor.ToString
    isDefinition: true
    commentId: Overload:Global.HsvColor.ToString
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.BasicSample.WriteResult*:
    name:
      CSharp:
      - id: Global.BasicSample.WriteResult*
        name: WriteResult
        nameWithType: BasicSample.WriteResult
        qualifiedName: BasicSample.WriteResult
      VB:
      - id: Global.BasicSample.WriteResult*
        name: WriteResult
        nameWithType: BasicSample.WriteResult
        qualifiedName: BasicSample.WriteResult
    isDefinition: true
    commentId: Overload:Global.BasicSample.WriteResult
  Global.BasicSample:
    name:
      CSharp:
      - id: Global.BasicSample
        name: BasicSample
        nameWithType: BasicSample
        qualifiedName: BasicSample
      VB:
      - id: Global.BasicSample
        name: BasicSample
        nameWithType: BasicSample
        qualifiedName: BasicSample
    isDefinition: true
    commentId: T:Global.BasicSample
  Global.IPointerDownHandler:
    name:
      CSharp:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
      VB:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
    isDefinition: true
  Global.RawImage:
    name:
      CSharp:
      - id: Global.RawImage
        name: RawImage
        nameWithType: RawImage
        qualifiedName: RawImage
        isExternal: true
      VB:
      - id: Global.RawImage
        name: RawImage
        nameWithType: RawImage
        qualifiedName: RawImage
        isExternal: true
    isDefinition: true
    commentId: '!:Global.RawImage'
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  Global.CanvasSampleOpenFileImage.OnPointerDown*:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileImage.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileImage.OnPointerDown
        qualifiedName: CanvasSampleOpenFileImage.OnPointerDown
      VB:
      - id: Global.CanvasSampleOpenFileImage.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileImage.OnPointerDown
        qualifiedName: CanvasSampleOpenFileImage.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.CanvasSampleOpenFileImage.OnPointerDown
  Global.CanvasSampleOpenFileImage:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileImage
        name: CanvasSampleOpenFileImage
        nameWithType: CanvasSampleOpenFileImage
        qualifiedName: CanvasSampleOpenFileImage
      VB:
      - id: Global.CanvasSampleOpenFileImage
        name: CanvasSampleOpenFileImage
        nameWithType: CanvasSampleOpenFileImage
        qualifiedName: CanvasSampleOpenFileImage
    isDefinition: true
    commentId: T:Global.CanvasSampleOpenFileImage
  Global.Text:
    name:
      CSharp:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
  Global.CanvasSampleOpenFileText.OnPointerDown*:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileText.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileText.OnPointerDown
        qualifiedName: CanvasSampleOpenFileText.OnPointerDown
      VB:
      - id: Global.CanvasSampleOpenFileText.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileText.OnPointerDown
        qualifiedName: CanvasSampleOpenFileText.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.CanvasSampleOpenFileText.OnPointerDown
  Global.CanvasSampleOpenFileText:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileText
        name: CanvasSampleOpenFileText
        nameWithType: CanvasSampleOpenFileText
        qualifiedName: CanvasSampleOpenFileText
      VB:
      - id: Global.CanvasSampleOpenFileText
        name: CanvasSampleOpenFileText
        nameWithType: CanvasSampleOpenFileText
        qualifiedName: CanvasSampleOpenFileText
    isDefinition: true
    commentId: T:Global.CanvasSampleOpenFileText
  Global.CanvasSampleOpenFileTextMultiple.OnPointerDown*:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileTextMultiple.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileTextMultiple.OnPointerDown
        qualifiedName: CanvasSampleOpenFileTextMultiple.OnPointerDown
      VB:
      - id: Global.CanvasSampleOpenFileTextMultiple.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleOpenFileTextMultiple.OnPointerDown
        qualifiedName: CanvasSampleOpenFileTextMultiple.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.CanvasSampleOpenFileTextMultiple.OnPointerDown
  Global.CanvasSampleOpenFileTextMultiple:
    name:
      CSharp:
      - id: Global.CanvasSampleOpenFileTextMultiple
        name: CanvasSampleOpenFileTextMultiple
        nameWithType: CanvasSampleOpenFileTextMultiple
        qualifiedName: CanvasSampleOpenFileTextMultiple
      VB:
      - id: Global.CanvasSampleOpenFileTextMultiple
        name: CanvasSampleOpenFileTextMultiple
        nameWithType: CanvasSampleOpenFileTextMultiple
        qualifiedName: CanvasSampleOpenFileTextMultiple
    isDefinition: true
    commentId: T:Global.CanvasSampleOpenFileTextMultiple
  Global.CanvasSampleSaveFileImage.OnPointerDown*:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileImage.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleSaveFileImage.OnPointerDown
        qualifiedName: CanvasSampleSaveFileImage.OnPointerDown
      VB:
      - id: Global.CanvasSampleSaveFileImage.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleSaveFileImage.OnPointerDown
        qualifiedName: CanvasSampleSaveFileImage.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.CanvasSampleSaveFileImage.OnPointerDown
  Global.CanvasSampleSaveFileImage.OnClick*:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileImage.OnClick*
        name: OnClick
        nameWithType: CanvasSampleSaveFileImage.OnClick
        qualifiedName: CanvasSampleSaveFileImage.OnClick
      VB:
      - id: Global.CanvasSampleSaveFileImage.OnClick*
        name: OnClick
        nameWithType: CanvasSampleSaveFileImage.OnClick
        qualifiedName: CanvasSampleSaveFileImage.OnClick
    isDefinition: true
    commentId: Overload:Global.CanvasSampleSaveFileImage.OnClick
  Global.CanvasSampleSaveFileImage:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileImage
        name: CanvasSampleSaveFileImage
        nameWithType: CanvasSampleSaveFileImage
        qualifiedName: CanvasSampleSaveFileImage
      VB:
      - id: Global.CanvasSampleSaveFileImage
        name: CanvasSampleSaveFileImage
        nameWithType: CanvasSampleSaveFileImage
        qualifiedName: CanvasSampleSaveFileImage
    isDefinition: true
    commentId: T:Global.CanvasSampleSaveFileImage
  Global.CanvasSampleSaveFileText.OnPointerDown*:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileText.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleSaveFileText.OnPointerDown
        qualifiedName: CanvasSampleSaveFileText.OnPointerDown
      VB:
      - id: Global.CanvasSampleSaveFileText.OnPointerDown*
        name: OnPointerDown
        nameWithType: CanvasSampleSaveFileText.OnPointerDown
        qualifiedName: CanvasSampleSaveFileText.OnPointerDown
    isDefinition: true
    commentId: Overload:Global.CanvasSampleSaveFileText.OnPointerDown
  Global.CanvasSampleSaveFileText.OnClick*:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileText.OnClick*
        name: OnClick
        nameWithType: CanvasSampleSaveFileText.OnClick
        qualifiedName: CanvasSampleSaveFileText.OnClick
      VB:
      - id: Global.CanvasSampleSaveFileText.OnClick*
        name: OnClick
        nameWithType: CanvasSampleSaveFileText.OnClick
        qualifiedName: CanvasSampleSaveFileText.OnClick
    isDefinition: true
    commentId: Overload:Global.CanvasSampleSaveFileText.OnClick
  Global.CanvasSampleSaveFileText:
    name:
      CSharp:
      - id: Global.CanvasSampleSaveFileText
        name: CanvasSampleSaveFileText
        nameWithType: CanvasSampleSaveFileText
        qualifiedName: CanvasSampleSaveFileText
      VB:
      - id: Global.CanvasSampleSaveFileText
        name: CanvasSampleSaveFileText
        nameWithType: CanvasSampleSaveFileText
        qualifiedName: CanvasSampleSaveFileText
    isDefinition: true
    commentId: T:Global.CanvasSampleSaveFileText
  Global.MenuCommand:
    name:
      CSharp:
      - id: Global.MenuCommand
        name: MenuCommand
        nameWithType: MenuCommand
        qualifiedName: MenuCommand
        isExternal: true
      VB:
      - id: Global.MenuCommand
        name: MenuCommand
        nameWithType: MenuCommand
        qualifiedName: MenuCommand
        isExternal: true
    isDefinition: true
  Global.MenuItems.AddRectangle*:
    name:
      CSharp:
      - id: Global.MenuItems.AddRectangle*
        name: AddRectangle
        nameWithType: MenuItems.AddRectangle
        qualifiedName: MenuItems.AddRectangle
      VB:
      - id: Global.MenuItems.AddRectangle*
        name: AddRectangle
        nameWithType: MenuItems.AddRectangle
        qualifiedName: MenuItems.AddRectangle
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddRectangle
  Global.MenuItems.AddEllipse*:
    name:
      CSharp:
      - id: Global.MenuItems.AddEllipse*
        name: AddEllipse
        nameWithType: MenuItems.AddEllipse
        qualifiedName: MenuItems.AddEllipse
      VB:
      - id: Global.MenuItems.AddEllipse*
        name: AddEllipse
        nameWithType: MenuItems.AddEllipse
        qualifiedName: MenuItems.AddEllipse
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddEllipse
  Global.MenuItems.AddLine*:
    name:
      CSharp:
      - id: Global.MenuItems.AddLine*
        name: AddLine
        nameWithType: MenuItems.AddLine
        qualifiedName: MenuItems.AddLine
      VB:
      - id: Global.MenuItems.AddLine*
        name: AddLine
        nameWithType: MenuItems.AddLine
        qualifiedName: MenuItems.AddLine
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddLine
  Global.MenuItems.AddPolygon*:
    name:
      CSharp:
      - id: Global.MenuItems.AddPolygon*
        name: AddPolygon
        nameWithType: MenuItems.AddPolygon
        qualifiedName: MenuItems.AddPolygon
      VB:
      - id: Global.MenuItems.AddPolygon*
        name: AddPolygon
        nameWithType: MenuItems.AddPolygon
        qualifiedName: MenuItems.AddPolygon
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddPolygon
  Global.MenuItems.AddArc*:
    name:
      CSharp:
      - id: Global.MenuItems.AddArc*
        name: AddArc
        nameWithType: MenuItems.AddArc
        qualifiedName: MenuItems.AddArc
      VB:
      - id: Global.MenuItems.AddArc*
        name: AddArc
        nameWithType: MenuItems.AddArc
        qualifiedName: MenuItems.AddArc
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddArc
  Global.MenuItems.AddSector*:
    name:
      CSharp:
      - id: Global.MenuItems.AddSector*
        name: AddSector
        nameWithType: MenuItems.AddSector
        qualifiedName: MenuItems.AddSector
      VB:
      - id: Global.MenuItems.AddSector*
        name: AddSector
        nameWithType: MenuItems.AddSector
        qualifiedName: MenuItems.AddSector
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddSector
  Global.MenuItems.AddEdgeGradient*:
    name:
      CSharp:
      - id: Global.MenuItems.AddEdgeGradient*
        name: AddEdgeGradient
        nameWithType: MenuItems.AddEdgeGradient
        qualifiedName: MenuItems.AddEdgeGradient
      VB:
      - id: Global.MenuItems.AddEdgeGradient*
        name: AddEdgeGradient
        nameWithType: MenuItems.AddEdgeGradient
        qualifiedName: MenuItems.AddEdgeGradient
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddEdgeGradient
  Global.MenuItems.AddPixelLine*:
    name:
      CSharp:
      - id: Global.MenuItems.AddPixelLine*
        name: AddPixelLine
        nameWithType: MenuItems.AddPixelLine
        qualifiedName: MenuItems.AddPixelLine
      VB:
      - id: Global.MenuItems.AddPixelLine*
        name: AddPixelLine
        nameWithType: MenuItems.AddPixelLine
        qualifiedName: MenuItems.AddPixelLine
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddPixelLine
  Global.MenuItems.AddEmptyFillRect*:
    name:
      CSharp:
      - id: Global.MenuItems.AddEmptyFillRect*
        name: AddEmptyFillRect
        nameWithType: MenuItems.AddEmptyFillRect
        qualifiedName: MenuItems.AddEmptyFillRect
      VB:
      - id: Global.MenuItems.AddEmptyFillRect*
        name: AddEmptyFillRect
        nameWithType: MenuItems.AddEmptyFillRect
        qualifiedName: MenuItems.AddEmptyFillRect
    isDefinition: true
    commentId: Overload:Global.MenuItems.AddEmptyFillRect
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.MenuItems.CreateShapeGO*:
    name:
      CSharp:
      - id: Global.MenuItems.CreateShapeGO*
        name: CreateShapeGO
        nameWithType: MenuItems.CreateShapeGO
        qualifiedName: MenuItems.CreateShapeGO
      VB:
      - id: Global.MenuItems.CreateShapeGO*
        name: CreateShapeGO
        nameWithType: MenuItems.CreateShapeGO
        qualifiedName: MenuItems.CreateShapeGO
    isDefinition: true
    commentId: Overload:Global.MenuItems.CreateShapeGO
  Global.MenuItems.CreateCanvas*:
    name:
      CSharp:
      - id: Global.MenuItems.CreateCanvas*
        name: CreateCanvas
        nameWithType: MenuItems.CreateCanvas
        qualifiedName: MenuItems.CreateCanvas
      VB:
      - id: Global.MenuItems.CreateCanvas*
        name: CreateCanvas
        nameWithType: MenuItems.CreateCanvas
        qualifiedName: MenuItems.CreateCanvas
    isDefinition: true
    commentId: Overload:Global.MenuItems.CreateCanvas
  Global.MenuItems:
    name:
      CSharp:
      - id: Global.MenuItems
        name: MenuItems
        nameWithType: MenuItems
        qualifiedName: MenuItems
      VB:
      - id: Global.MenuItems
        name: MenuItems
        nameWithType: MenuItems
        qualifiedName: MenuItems
    isDefinition: true
    commentId: T:Global.MenuItems
  Global.FunctionDemoEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.FunctionDemoEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FunctionDemoEditor.OnInspectorGUI
        qualifiedName: FunctionDemoEditor.OnInspectorGUI
      VB:
      - id: Global.FunctionDemoEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FunctionDemoEditor.OnInspectorGUI
        qualifiedName: FunctionDemoEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.FunctionDemoEditor.OnInspectorGUI
  Global.FunctionDemoEditor:
    name:
      CSharp:
      - id: Global.FunctionDemoEditor
        name: FunctionDemoEditor
        nameWithType: FunctionDemoEditor
        qualifiedName: FunctionDemoEditor
      VB:
      - id: Global.FunctionDemoEditor
        name: FunctionDemoEditor
        nameWithType: FunctionDemoEditor
        qualifiedName: FunctionDemoEditor
    isDefinition: true
    commentId: T:Global.FunctionDemoEditor
  Global.FunctionDemoEditor2.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.FunctionDemoEditor2.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FunctionDemoEditor2.OnInspectorGUI
        qualifiedName: FunctionDemoEditor2.OnInspectorGUI
      VB:
      - id: Global.FunctionDemoEditor2.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: FunctionDemoEditor2.OnInspectorGUI
        qualifiedName: FunctionDemoEditor2.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.FunctionDemoEditor2.OnInspectorGUI
  Global.FunctionDemoEditor2:
    name:
      CSharp:
      - id: Global.FunctionDemoEditor2
        name: FunctionDemoEditor2
        nameWithType: FunctionDemoEditor2
        qualifiedName: FunctionDemoEditor2
      VB:
      - id: Global.FunctionDemoEditor2
        name: FunctionDemoEditor2
        nameWithType: FunctionDemoEditor2
        qualifiedName: FunctionDemoEditor2
    isDefinition: true
    commentId: T:Global.FunctionDemoEditor2
  Global.Rect:
    name:
      CSharp:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
    isDefinition: true
  Global.SerializedProperty:
    name:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        nameWithType: SerializedProperty
        qualifiedName: SerializedProperty
        isExternal: true
    isDefinition: true
  Global.GUIContent:
    name:
      CSharp:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
      VB:
      - id: Global.GUIContent
        name: GUIContent
        nameWithType: GUIContent
        qualifiedName: GUIContent
        isExternal: true
    isDefinition: true
  Global.EllipsePropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.EllipsePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: EllipsePropertiesDrawer.OnGUI
        qualifiedName: EllipsePropertiesDrawer.OnGUI
      VB:
      - id: Global.EllipsePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: EllipsePropertiesDrawer.OnGUI
        qualifiedName: EllipsePropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.EllipsePropertiesDrawer.OnGUI
  Global.EllipsePropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.EllipsePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: EllipsePropertiesDrawer.GetPropertyHeight
        qualifiedName: EllipsePropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.EllipsePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: EllipsePropertiesDrawer.GetPropertyHeight
        qualifiedName: EllipsePropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.EllipsePropertiesDrawer.GetPropertyHeight
  Global.EllipsePropertiesDrawer:
    name:
      CSharp:
      - id: Global.EllipsePropertiesDrawer
        name: EllipsePropertiesDrawer
        nameWithType: EllipsePropertiesDrawer
        qualifiedName: EllipsePropertiesDrawer
      VB:
      - id: Global.EllipsePropertiesDrawer
        name: EllipsePropertiesDrawer
        nameWithType: EllipsePropertiesDrawer
        qualifiedName: EllipsePropertiesDrawer
    isDefinition: true
    commentId: T:Global.EllipsePropertiesDrawer
  Global.LinePropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.LinePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: LinePropertiesDrawer.OnGUI
        qualifiedName: LinePropertiesDrawer.OnGUI
      VB:
      - id: Global.LinePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: LinePropertiesDrawer.OnGUI
        qualifiedName: LinePropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.LinePropertiesDrawer.OnGUI
  Global.LinePropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.LinePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: LinePropertiesDrawer.GetPropertyHeight
        qualifiedName: LinePropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.LinePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: LinePropertiesDrawer.GetPropertyHeight
        qualifiedName: LinePropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.LinePropertiesDrawer.GetPropertyHeight
  Global.LinePropertiesDrawer:
    name:
      CSharp:
      - id: Global.LinePropertiesDrawer
        name: LinePropertiesDrawer
        nameWithType: LinePropertiesDrawer
        qualifiedName: LinePropertiesDrawer
      VB:
      - id: Global.LinePropertiesDrawer
        name: LinePropertiesDrawer
        nameWithType: LinePropertiesDrawer
        qualifiedName: LinePropertiesDrawer
    isDefinition: true
    commentId: T:Global.LinePropertiesDrawer
  Global.OutlineShapePropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.OutlineShapePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: OutlineShapePropertiesDrawer.OnGUI
        qualifiedName: OutlineShapePropertiesDrawer.OnGUI
      VB:
      - id: Global.OutlineShapePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: OutlineShapePropertiesDrawer.OnGUI
        qualifiedName: OutlineShapePropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.OutlineShapePropertiesDrawer.OnGUI
  Global.OutlineShapePropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.OutlineShapePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: OutlineShapePropertiesDrawer.GetPropertyHeight
        qualifiedName: OutlineShapePropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.OutlineShapePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: OutlineShapePropertiesDrawer.GetPropertyHeight
        qualifiedName: OutlineShapePropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.OutlineShapePropertiesDrawer.GetPropertyHeight
  Global.OutlineShapePropertiesDrawer:
    name:
      CSharp:
      - id: Global.OutlineShapePropertiesDrawer
        name: OutlineShapePropertiesDrawer
        nameWithType: OutlineShapePropertiesDrawer
        qualifiedName: OutlineShapePropertiesDrawer
      VB:
      - id: Global.OutlineShapePropertiesDrawer
        name: OutlineShapePropertiesDrawer
        nameWithType: OutlineShapePropertiesDrawer
        qualifiedName: OutlineShapePropertiesDrawer
    isDefinition: true
    commentId: T:Global.OutlineShapePropertiesDrawer
  Global.Vector2[]:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.PointListDrawer.Draw*:
    name:
      CSharp:
      - id: Global.PointListDrawer.Draw*
        name: Draw
        nameWithType: PointListDrawer.Draw
        qualifiedName: PointListDrawer.Draw
      VB:
      - id: Global.PointListDrawer.Draw*
        name: Draw
        nameWithType: PointListDrawer.Draw
        qualifiedName: PointListDrawer.Draw
    isDefinition: true
    commentId: Overload:Global.PointListDrawer.Draw
  Global.PointListDrawer:
    name:
      CSharp:
      - id: Global.PointListDrawer
        name: PointListDrawer
        nameWithType: PointListDrawer
        qualifiedName: PointListDrawer
      VB:
      - id: Global.PointListDrawer
        name: PointListDrawer
        nameWithType: PointListDrawer
        qualifiedName: PointListDrawer
    isDefinition: true
    commentId: T:Global.PointListDrawer
  Global.PointListPropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.PointListPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: PointListPropertiesDrawer.OnGUI
        qualifiedName: PointListPropertiesDrawer.OnGUI
      VB:
      - id: Global.PointListPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: PointListPropertiesDrawer.OnGUI
        qualifiedName: PointListPropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.PointListPropertiesDrawer.OnGUI
  Global.PointListPropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.PointListPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: PointListPropertiesDrawer.GetPropertyHeight
        qualifiedName: PointListPropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.PointListPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: PointListPropertiesDrawer.GetPropertyHeight
        qualifiedName: PointListPropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.PointListPropertiesDrawer.GetPropertyHeight
  Global.PointListPropertiesDrawer:
    name:
      CSharp:
      - id: Global.PointListPropertiesDrawer
        name: PointListPropertiesDrawer
        nameWithType: PointListPropertiesDrawer
        qualifiedName: PointListPropertiesDrawer
      VB:
      - id: Global.PointListPropertiesDrawer
        name: PointListPropertiesDrawer
        nameWithType: PointListPropertiesDrawer
        qualifiedName: PointListPropertiesDrawer
    isDefinition: true
    commentId: T:Global.PointListPropertiesDrawer
  Global.PolygonPropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.PolygonPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: PolygonPropertiesDrawer.OnGUI
        qualifiedName: PolygonPropertiesDrawer.OnGUI
      VB:
      - id: Global.PolygonPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: PolygonPropertiesDrawer.OnGUI
        qualifiedName: PolygonPropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.PolygonPropertiesDrawer.OnGUI
  Global.PolygonPropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.PolygonPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: PolygonPropertiesDrawer.GetPropertyHeight
        qualifiedName: PolygonPropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.PolygonPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: PolygonPropertiesDrawer.GetPropertyHeight
        qualifiedName: PolygonPropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.PolygonPropertiesDrawer.GetPropertyHeight
  Global.PolygonPropertiesDrawer:
    name:
      CSharp:
      - id: Global.PolygonPropertiesDrawer
        name: PolygonPropertiesDrawer
        nameWithType: PolygonPropertiesDrawer
        qualifiedName: PolygonPropertiesDrawer
      VB:
      - id: Global.PolygonPropertiesDrawer
        name: PolygonPropertiesDrawer
        nameWithType: PolygonPropertiesDrawer
        qualifiedName: PolygonPropertiesDrawer
    isDefinition: true
    commentId: T:Global.PolygonPropertiesDrawer
  Global.RoundedPropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.RoundedPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: RoundedPropertiesDrawer.OnGUI
        qualifiedName: RoundedPropertiesDrawer.OnGUI
      VB:
      - id: Global.RoundedPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: RoundedPropertiesDrawer.OnGUI
        qualifiedName: RoundedPropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.RoundedPropertiesDrawer.OnGUI
  Global.RoundedPropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.RoundedPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: RoundedPropertiesDrawer.GetPropertyHeight
        qualifiedName: RoundedPropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.RoundedPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: RoundedPropertiesDrawer.GetPropertyHeight
        qualifiedName: RoundedPropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.RoundedPropertiesDrawer.GetPropertyHeight
  Global.RoundedPropertiesDrawer:
    name:
      CSharp:
      - id: Global.RoundedPropertiesDrawer
        name: RoundedPropertiesDrawer
        nameWithType: RoundedPropertiesDrawer
        qualifiedName: RoundedPropertiesDrawer
      VB:
      - id: Global.RoundedPropertiesDrawer
        name: RoundedPropertiesDrawer
        nameWithType: RoundedPropertiesDrawer
        qualifiedName: RoundedPropertiesDrawer
    isDefinition: true
    commentId: T:Global.RoundedPropertiesDrawer
  Global.RoundingPropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.RoundingPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: RoundingPropertiesDrawer.OnGUI
        qualifiedName: RoundingPropertiesDrawer.OnGUI
      VB:
      - id: Global.RoundingPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: RoundingPropertiesDrawer.OnGUI
        qualifiedName: RoundingPropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.RoundingPropertiesDrawer.OnGUI
  Global.RoundingPropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.RoundingPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: RoundingPropertiesDrawer.GetPropertyHeight
        qualifiedName: RoundingPropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.RoundingPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: RoundingPropertiesDrawer.GetPropertyHeight
        qualifiedName: RoundingPropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.RoundingPropertiesDrawer.GetPropertyHeight
  Global.RoundingPropertiesDrawer:
    name:
      CSharp:
      - id: Global.RoundingPropertiesDrawer
        name: RoundingPropertiesDrawer
        nameWithType: RoundingPropertiesDrawer
        qualifiedName: RoundingPropertiesDrawer
      VB:
      - id: Global.RoundingPropertiesDrawer
        name: RoundingPropertiesDrawer
        nameWithType: RoundingPropertiesDrawer
        qualifiedName: RoundingPropertiesDrawer
    isDefinition: true
    commentId: T:Global.RoundingPropertiesDrawer
  Global.ShadowsPropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.ShadowsPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: ShadowsPropertiesDrawer.OnGUI
        qualifiedName: ShadowsPropertiesDrawer.OnGUI
      VB:
      - id: Global.ShadowsPropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: ShadowsPropertiesDrawer.OnGUI
        qualifiedName: ShadowsPropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.ShadowsPropertiesDrawer.OnGUI
  Global.ShadowsPropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.ShadowsPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: ShadowsPropertiesDrawer.GetPropertyHeight
        qualifiedName: ShadowsPropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.ShadowsPropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: ShadowsPropertiesDrawer.GetPropertyHeight
        qualifiedName: ShadowsPropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.ShadowsPropertiesDrawer.GetPropertyHeight
  Global.ShadowsPropertiesDrawer:
    name:
      CSharp:
      - id: Global.ShadowsPropertiesDrawer
        name: ShadowsPropertiesDrawer
        nameWithType: ShadowsPropertiesDrawer
        qualifiedName: ShadowsPropertiesDrawer
      VB:
      - id: Global.ShadowsPropertiesDrawer
        name: ShadowsPropertiesDrawer
        nameWithType: ShadowsPropertiesDrawer
        qualifiedName: ShadowsPropertiesDrawer
    isDefinition: true
    commentId: T:Global.ShadowsPropertiesDrawer
  Global.ShapePropertiesDrawer.OnGUI*:
    name:
      CSharp:
      - id: Global.ShapePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: ShapePropertiesDrawer.OnGUI
        qualifiedName: ShapePropertiesDrawer.OnGUI
      VB:
      - id: Global.ShapePropertiesDrawer.OnGUI*
        name: OnGUI
        nameWithType: ShapePropertiesDrawer.OnGUI
        qualifiedName: ShapePropertiesDrawer.OnGUI
    isDefinition: true
    commentId: Overload:Global.ShapePropertiesDrawer.OnGUI
  Global.ShapePropertiesDrawer.GetPropertyHeight*:
    name:
      CSharp:
      - id: Global.ShapePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: ShapePropertiesDrawer.GetPropertyHeight
        qualifiedName: ShapePropertiesDrawer.GetPropertyHeight
      VB:
      - id: Global.ShapePropertiesDrawer.GetPropertyHeight*
        name: GetPropertyHeight
        nameWithType: ShapePropertiesDrawer.GetPropertyHeight
        qualifiedName: ShapePropertiesDrawer.GetPropertyHeight
    isDefinition: true
    commentId: Overload:Global.ShapePropertiesDrawer.GetPropertyHeight
  Global.ShapePropertiesDrawer:
    name:
      CSharp:
      - id: Global.ShapePropertiesDrawer
        name: ShapePropertiesDrawer
        nameWithType: ShapePropertiesDrawer
        qualifiedName: ShapePropertiesDrawer
      VB:
      - id: Global.ShapePropertiesDrawer
        name: ShapePropertiesDrawer
        nameWithType: ShapePropertiesDrawer
        qualifiedName: ShapePropertiesDrawer
    isDefinition: true
    commentId: T:Global.ShapePropertiesDrawer
  Global.ArcEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.ArcEditor.OnEnable*
        name: OnEnable
        nameWithType: ArcEditor.OnEnable
        qualifiedName: ArcEditor.OnEnable
      VB:
      - id: Global.ArcEditor.OnEnable*
        name: OnEnable
        nameWithType: ArcEditor.OnEnable
        qualifiedName: ArcEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.ArcEditor.OnEnable
  Global.ArcEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.ArcEditor.OnDisable*
        name: OnDisable
        nameWithType: ArcEditor.OnDisable
        qualifiedName: ArcEditor.OnDisable
      VB:
      - id: Global.ArcEditor.OnDisable*
        name: OnDisable
        nameWithType: ArcEditor.OnDisable
        qualifiedName: ArcEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.ArcEditor.OnDisable
  Global.ArcEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.ArcEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ArcEditor.OnInspectorGUI
        qualifiedName: ArcEditor.OnInspectorGUI
      VB:
      - id: Global.ArcEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ArcEditor.OnInspectorGUI
        qualifiedName: ArcEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.ArcEditor.OnInspectorGUI
  Global.ArcEditor:
    name:
      CSharp:
      - id: Global.ArcEditor
        name: ArcEditor
        nameWithType: ArcEditor
        qualifiedName: ArcEditor
      VB:
      - id: Global.ArcEditor
        name: ArcEditor
        nameWithType: ArcEditor
        qualifiedName: ArcEditor
    isDefinition: true
    commentId: T:Global.ArcEditor
  Global.EdgeGradientEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.EdgeGradientEditor.OnEnable*
        name: OnEnable
        nameWithType: EdgeGradientEditor.OnEnable
        qualifiedName: EdgeGradientEditor.OnEnable
      VB:
      - id: Global.EdgeGradientEditor.OnEnable*
        name: OnEnable
        nameWithType: EdgeGradientEditor.OnEnable
        qualifiedName: EdgeGradientEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.EdgeGradientEditor.OnEnable
  Global.EdgeGradientEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.EdgeGradientEditor.OnDisable*
        name: OnDisable
        nameWithType: EdgeGradientEditor.OnDisable
        qualifiedName: EdgeGradientEditor.OnDisable
      VB:
      - id: Global.EdgeGradientEditor.OnDisable*
        name: OnDisable
        nameWithType: EdgeGradientEditor.OnDisable
        qualifiedName: EdgeGradientEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.EdgeGradientEditor.OnDisable
  Global.EdgeGradientEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.EdgeGradientEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EdgeGradientEditor.OnInspectorGUI
        qualifiedName: EdgeGradientEditor.OnInspectorGUI
      VB:
      - id: Global.EdgeGradientEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EdgeGradientEditor.OnInspectorGUI
        qualifiedName: EdgeGradientEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.EdgeGradientEditor.OnInspectorGUI
  Global.EdgeGradientEditor:
    name:
      CSharp:
      - id: Global.EdgeGradientEditor
        name: EdgeGradientEditor
        nameWithType: EdgeGradientEditor
        qualifiedName: EdgeGradientEditor
      VB:
      - id: Global.EdgeGradientEditor
        name: EdgeGradientEditor
        nameWithType: EdgeGradientEditor
        qualifiedName: EdgeGradientEditor
    isDefinition: true
    commentId: T:Global.EdgeGradientEditor
  Global.EllipseEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.EllipseEditor.OnEnable*
        name: OnEnable
        nameWithType: EllipseEditor.OnEnable
        qualifiedName: EllipseEditor.OnEnable
      VB:
      - id: Global.EllipseEditor.OnEnable*
        name: OnEnable
        nameWithType: EllipseEditor.OnEnable
        qualifiedName: EllipseEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.EllipseEditor.OnEnable
  Global.EllipseEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.EllipseEditor.OnDisable*
        name: OnDisable
        nameWithType: EllipseEditor.OnDisable
        qualifiedName: EllipseEditor.OnDisable
      VB:
      - id: Global.EllipseEditor.OnDisable*
        name: OnDisable
        nameWithType: EllipseEditor.OnDisable
        qualifiedName: EllipseEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.EllipseEditor.OnDisable
  Global.EllipseEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.EllipseEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EllipseEditor.OnInspectorGUI
        qualifiedName: EllipseEditor.OnInspectorGUI
      VB:
      - id: Global.EllipseEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EllipseEditor.OnInspectorGUI
        qualifiedName: EllipseEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.EllipseEditor.OnInspectorGUI
  Global.EllipseEditor:
    name:
      CSharp:
      - id: Global.EllipseEditor
        name: EllipseEditor
        nameWithType: EllipseEditor
        qualifiedName: EllipseEditor
      VB:
      - id: Global.EllipseEditor
        name: EllipseEditor
        nameWithType: EllipseEditor
        qualifiedName: EllipseEditor
    isDefinition: true
    commentId: T:Global.EllipseEditor
  Global.EmptyFillRectEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.EmptyFillRectEditor.OnEnable*
        name: OnEnable
        nameWithType: EmptyFillRectEditor.OnEnable
        qualifiedName: EmptyFillRectEditor.OnEnable
      VB:
      - id: Global.EmptyFillRectEditor.OnEnable*
        name: OnEnable
        nameWithType: EmptyFillRectEditor.OnEnable
        qualifiedName: EmptyFillRectEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.EmptyFillRectEditor.OnEnable
  Global.EmptyFillRectEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.EmptyFillRectEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EmptyFillRectEditor.OnInspectorGUI
        qualifiedName: EmptyFillRectEditor.OnInspectorGUI
      VB:
      - id: Global.EmptyFillRectEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: EmptyFillRectEditor.OnInspectorGUI
        qualifiedName: EmptyFillRectEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.EmptyFillRectEditor.OnInspectorGUI
  Global.EmptyFillRectEditor:
    name:
      CSharp:
      - id: Global.EmptyFillRectEditor
        name: EmptyFillRectEditor
        nameWithType: EmptyFillRectEditor
        qualifiedName: EmptyFillRectEditor
      VB:
      - id: Global.EmptyFillRectEditor
        name: EmptyFillRectEditor
        nameWithType: EmptyFillRectEditor
        qualifiedName: EmptyFillRectEditor
    isDefinition: true
    commentId: T:Global.EmptyFillRectEditor
  Global.LineEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.LineEditor.OnEnable*
        name: OnEnable
        nameWithType: LineEditor.OnEnable
        qualifiedName: LineEditor.OnEnable
      VB:
      - id: Global.LineEditor.OnEnable*
        name: OnEnable
        nameWithType: LineEditor.OnEnable
        qualifiedName: LineEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.LineEditor.OnEnable
  Global.LineEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.LineEditor.OnDisable*
        name: OnDisable
        nameWithType: LineEditor.OnDisable
        qualifiedName: LineEditor.OnDisable
      VB:
      - id: Global.LineEditor.OnDisable*
        name: OnDisable
        nameWithType: LineEditor.OnDisable
        qualifiedName: LineEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.LineEditor.OnDisable
  Global.LineEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.LineEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: LineEditor.OnInspectorGUI
        qualifiedName: LineEditor.OnInspectorGUI
      VB:
      - id: Global.LineEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: LineEditor.OnInspectorGUI
        qualifiedName: LineEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.LineEditor.OnInspectorGUI
  Global.LineEditor:
    name:
      CSharp:
      - id: Global.LineEditor
        name: LineEditor
        nameWithType: LineEditor
        qualifiedName: LineEditor
      VB:
      - id: Global.LineEditor
        name: LineEditor
        nameWithType: LineEditor
        qualifiedName: LineEditor
    isDefinition: true
    commentId: T:Global.LineEditor
  Global.PixelLineEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.PixelLineEditor.OnEnable*
        name: OnEnable
        nameWithType: PixelLineEditor.OnEnable
        qualifiedName: PixelLineEditor.OnEnable
      VB:
      - id: Global.PixelLineEditor.OnEnable*
        name: OnEnable
        nameWithType: PixelLineEditor.OnEnable
        qualifiedName: PixelLineEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.PixelLineEditor.OnEnable
  Global.PixelLineEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.PixelLineEditor.OnDisable*
        name: OnDisable
        nameWithType: PixelLineEditor.OnDisable
        qualifiedName: PixelLineEditor.OnDisable
      VB:
      - id: Global.PixelLineEditor.OnDisable*
        name: OnDisable
        nameWithType: PixelLineEditor.OnDisable
        qualifiedName: PixelLineEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.PixelLineEditor.OnDisable
  Global.PixelLineEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.PixelLineEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PixelLineEditor.OnInspectorGUI
        qualifiedName: PixelLineEditor.OnInspectorGUI
      VB:
      - id: Global.PixelLineEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PixelLineEditor.OnInspectorGUI
        qualifiedName: PixelLineEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.PixelLineEditor.OnInspectorGUI
  Global.PixelLineEditor:
    name:
      CSharp:
      - id: Global.PixelLineEditor
        name: PixelLineEditor
        nameWithType: PixelLineEditor
        qualifiedName: PixelLineEditor
      VB:
      - id: Global.PixelLineEditor
        name: PixelLineEditor
        nameWithType: PixelLineEditor
        qualifiedName: PixelLineEditor
    isDefinition: true
    commentId: T:Global.PixelLineEditor
  Global.PolygonEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.PolygonEditor.OnEnable*
        name: OnEnable
        nameWithType: PolygonEditor.OnEnable
        qualifiedName: PolygonEditor.OnEnable
      VB:
      - id: Global.PolygonEditor.OnEnable*
        name: OnEnable
        nameWithType: PolygonEditor.OnEnable
        qualifiedName: PolygonEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.PolygonEditor.OnEnable
  Global.PolygonEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.PolygonEditor.OnDisable*
        name: OnDisable
        nameWithType: PolygonEditor.OnDisable
        qualifiedName: PolygonEditor.OnDisable
      VB:
      - id: Global.PolygonEditor.OnDisable*
        name: OnDisable
        nameWithType: PolygonEditor.OnDisable
        qualifiedName: PolygonEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.PolygonEditor.OnDisable
  Global.PolygonEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.PolygonEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PolygonEditor.OnInspectorGUI
        qualifiedName: PolygonEditor.OnInspectorGUI
      VB:
      - id: Global.PolygonEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PolygonEditor.OnInspectorGUI
        qualifiedName: PolygonEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.PolygonEditor.OnInspectorGUI
  Global.PolygonEditor:
    name:
      CSharp:
      - id: Global.PolygonEditor
        name: PolygonEditor
        nameWithType: PolygonEditor
        qualifiedName: PolygonEditor
      VB:
      - id: Global.PolygonEditor
        name: PolygonEditor
        nameWithType: PolygonEditor
        qualifiedName: PolygonEditor
    isDefinition: true
    commentId: T:Global.PolygonEditor
  Global.RectangleEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.RectangleEditor.OnEnable*
        name: OnEnable
        nameWithType: RectangleEditor.OnEnable
        qualifiedName: RectangleEditor.OnEnable
      VB:
      - id: Global.RectangleEditor.OnEnable*
        name: OnEnable
        nameWithType: RectangleEditor.OnEnable
        qualifiedName: RectangleEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.RectangleEditor.OnEnable
  Global.RectangleEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.RectangleEditor.OnDisable*
        name: OnDisable
        nameWithType: RectangleEditor.OnDisable
        qualifiedName: RectangleEditor.OnDisable
      VB:
      - id: Global.RectangleEditor.OnDisable*
        name: OnDisable
        nameWithType: RectangleEditor.OnDisable
        qualifiedName: RectangleEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.RectangleEditor.OnDisable
  Global.RectangleEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.RectangleEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RectangleEditor.OnInspectorGUI
        qualifiedName: RectangleEditor.OnInspectorGUI
      VB:
      - id: Global.RectangleEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RectangleEditor.OnInspectorGUI
        qualifiedName: RectangleEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.RectangleEditor.OnInspectorGUI
  Global.RectangleEditor:
    name:
      CSharp:
      - id: Global.RectangleEditor
        name: RectangleEditor
        nameWithType: RectangleEditor
        qualifiedName: RectangleEditor
      VB:
      - id: Global.RectangleEditor
        name: RectangleEditor
        nameWithType: RectangleEditor
        qualifiedName: RectangleEditor
    isDefinition: true
    commentId: T:Global.RectangleEditor
  Global.SectorEditor.OnEnable*:
    name:
      CSharp:
      - id: Global.SectorEditor.OnEnable*
        name: OnEnable
        nameWithType: SectorEditor.OnEnable
        qualifiedName: SectorEditor.OnEnable
      VB:
      - id: Global.SectorEditor.OnEnable*
        name: OnEnable
        nameWithType: SectorEditor.OnEnable
        qualifiedName: SectorEditor.OnEnable
    isDefinition: true
    commentId: Overload:Global.SectorEditor.OnEnable
  Global.SectorEditor.OnDisable*:
    name:
      CSharp:
      - id: Global.SectorEditor.OnDisable*
        name: OnDisable
        nameWithType: SectorEditor.OnDisable
        qualifiedName: SectorEditor.OnDisable
      VB:
      - id: Global.SectorEditor.OnDisable*
        name: OnDisable
        nameWithType: SectorEditor.OnDisable
        qualifiedName: SectorEditor.OnDisable
    isDefinition: true
    commentId: Overload:Global.SectorEditor.OnDisable
  Global.SectorEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.SectorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: SectorEditor.OnInspectorGUI
        qualifiedName: SectorEditor.OnInspectorGUI
      VB:
      - id: Global.SectorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: SectorEditor.OnInspectorGUI
        qualifiedName: SectorEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.SectorEditor.OnInspectorGUI
  Global.SectorEditor:
    name:
      CSharp:
      - id: Global.SectorEditor
        name: SectorEditor
        nameWithType: SectorEditor
        qualifiedName: SectorEditor
      VB:
      - id: Global.SectorEditor
        name: SectorEditor
        nameWithType: SectorEditor
        qualifiedName: SectorEditor
    isDefinition: true
    commentId: T:Global.SectorEditor
  Global.SceneViewModelOverride:
    name:
      CSharp:
      - id: Global.SceneViewModelOverride
        name: SceneViewModelOverride
        nameWithType: SceneViewModelOverride
        qualifiedName: SceneViewModelOverride
      VB:
      - id: Global.SceneViewModelOverride
        name: SceneViewModelOverride
        nameWithType: SceneViewModelOverride
        qualifiedName: SceneViewModelOverride
    isDefinition: true
    commentId: T:Global.SceneViewModelOverride
  Global.Object2Terrain:
    name:
      CSharp:
      - id: Global.Object2Terrain
        name: Object2Terrain
        nameWithType: Object2Terrain
        qualifiedName: Object2Terrain
      VB:
      - id: Global.Object2Terrain
        name: Object2Terrain
        nameWithType: Object2Terrain
        qualifiedName: Object2Terrain
    isDefinition: true
    commentId: T:Global.Object2Terrain
  Global.IPostprocessBuild:
    name:
      CSharp:
      - id: Global.IPostprocessBuild
        name: IPostprocessBuild
        nameWithType: IPostprocessBuild
        qualifiedName: IPostprocessBuild
        isExternal: true
      VB:
      - id: Global.IPostprocessBuild
        name: IPostprocessBuild
        nameWithType: IPostprocessBuild
        qualifiedName: IPostprocessBuild
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IPostprocessBuild'
  Global.TriLibCheckPlugins.PluginsLoaded*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.PluginsLoaded*
        name: PluginsLoaded
        nameWithType: TriLibCheckPlugins.PluginsLoaded
        qualifiedName: TriLibCheckPlugins.PluginsLoaded
      VB:
      - id: Global.TriLibCheckPlugins.PluginsLoaded*
        name: PluginsLoaded
        nameWithType: TriLibCheckPlugins.PluginsLoaded
        qualifiedName: TriLibCheckPlugins.PluginsLoaded
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.PluginsLoaded
  Global.TriLibCheckPlugins.callbackOrder*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.callbackOrder*
        name: callbackOrder
        nameWithType: TriLibCheckPlugins.callbackOrder
        qualifiedName: TriLibCheckPlugins.callbackOrder
      VB:
      - id: Global.TriLibCheckPlugins.callbackOrder*
        name: callbackOrder
        nameWithType: TriLibCheckPlugins.callbackOrder
        qualifiedName: TriLibCheckPlugins.callbackOrder
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.callbackOrder
  Global.TriLibCheckPlugins.DebugEnabled*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.DebugEnabled*
        name: DebugEnabled
        nameWithType: TriLibCheckPlugins.DebugEnabled
        qualifiedName: TriLibCheckPlugins.DebugEnabled
      VB:
      - id: Global.TriLibCheckPlugins.DebugEnabled*
        name: DebugEnabled
        nameWithType: TriLibCheckPlugins.DebugEnabled
        qualifiedName: TriLibCheckPlugins.DebugEnabled
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.DebugEnabled
  Global.TriLibCheckPlugins.DebugEnabledValidate*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.DebugEnabledValidate*
        name: DebugEnabledValidate
        nameWithType: TriLibCheckPlugins.DebugEnabledValidate
        qualifiedName: TriLibCheckPlugins.DebugEnabledValidate
      VB:
      - id: Global.TriLibCheckPlugins.DebugEnabledValidate*
        name: DebugEnabledValidate
        nameWithType: TriLibCheckPlugins.DebugEnabledValidate
        qualifiedName: TriLibCheckPlugins.DebugEnabledValidate
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.DebugEnabledValidate
  Global.TriLibCheckPlugins.ZipEnabled*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.ZipEnabled*
        name: ZipEnabled
        nameWithType: TriLibCheckPlugins.ZipEnabled
        qualifiedName: TriLibCheckPlugins.ZipEnabled
      VB:
      - id: Global.TriLibCheckPlugins.ZipEnabled*
        name: ZipEnabled
        nameWithType: TriLibCheckPlugins.ZipEnabled
        qualifiedName: TriLibCheckPlugins.ZipEnabled
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.ZipEnabled
  Global.TriLibCheckPlugins.ZipEnabledValidate*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.ZipEnabledValidate*
        name: ZipEnabledValidate
        nameWithType: TriLibCheckPlugins.ZipEnabledValidate
        qualifiedName: TriLibCheckPlugins.ZipEnabledValidate
      VB:
      - id: Global.TriLibCheckPlugins.ZipEnabledValidate*
        name: ZipEnabledValidate
        nameWithType: TriLibCheckPlugins.ZipEnabledValidate
        qualifiedName: TriLibCheckPlugins.ZipEnabledValidate
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.ZipEnabledValidate
  Global.BuildTarget:
    name:
      CSharp:
      - id: Global.BuildTarget
        name: BuildTarget
        nameWithType: BuildTarget
        qualifiedName: BuildTarget
        isExternal: true
      VB:
      - id: Global.BuildTarget
        name: BuildTarget
        nameWithType: BuildTarget
        qualifiedName: BuildTarget
        isExternal: true
    isDefinition: true
  Global.TriLibCheckPlugins.OnPreprocessBuild*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.OnPreprocessBuild*
        name: OnPreprocessBuild
        nameWithType: TriLibCheckPlugins.OnPreprocessBuild
        qualifiedName: TriLibCheckPlugins.OnPreprocessBuild
      VB:
      - id: Global.TriLibCheckPlugins.OnPreprocessBuild*
        name: OnPreprocessBuild
        nameWithType: TriLibCheckPlugins.OnPreprocessBuild
        qualifiedName: TriLibCheckPlugins.OnPreprocessBuild
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.OnPreprocessBuild
  Global.TriLibCheckPlugins.OnPostprocessBuild*:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins.OnPostprocessBuild*
        name: OnPostprocessBuild
        nameWithType: TriLibCheckPlugins.OnPostprocessBuild
        qualifiedName: TriLibCheckPlugins.OnPostprocessBuild
      VB:
      - id: Global.TriLibCheckPlugins.OnPostprocessBuild*
        name: OnPostprocessBuild
        nameWithType: TriLibCheckPlugins.OnPostprocessBuild
        qualifiedName: TriLibCheckPlugins.OnPostprocessBuild
    isDefinition: true
    commentId: Overload:Global.TriLibCheckPlugins.OnPostprocessBuild
  Global.TriLibCheckPlugins:
    name:
      CSharp:
      - id: Global.TriLibCheckPlugins
        name: TriLibCheckPlugins
        nameWithType: TriLibCheckPlugins
        qualifiedName: TriLibCheckPlugins
      VB:
      - id: Global.TriLibCheckPlugins
        name: TriLibCheckPlugins
        nameWithType: TriLibCheckPlugins
        qualifiedName: TriLibCheckPlugins
    isDefinition: true
    commentId: T:Global.TriLibCheckPlugins
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
